;-------------------------------------------------------------------------------
#unset CAN_COMMANDS
#unset enablehardware_test

[MegaTune]
   MTversion      = 2.25 ; MegaTune itself; needs to match exec version.

   queryCommand   = "Q"

   ;signature      = "speeduino 201708"
   signature    = "rusEFI v1.04"

   versionInfo    = "S"  ; Put this in the title bar.

[TunerStudio]
   iniSpecVersion = 3.49

;-------------------------------------------------------------------------------

[SettingGroups]
   ; the referenceName will over-ride previous, so if you are creating a
   ; settingGroup with a reference name of lambdaSensor, it will replace the
   ; setting group defined in the settingGroups.xml of the TunerStudio config
   ; folder. If is is an undefined referenceName, it will be added.
   ; keyword    =  referenceName,  DisplayName




[PcVariables]
   ; valid types: boolean, double, int, list
   ;
   ; no offset as they are local variables.
   ; entry format the same as Constants, except there is no offset.
   ; arrays are not yet supported.
   ; name = class,  type,    shape,  units,       scale, translate,    lo,      hi, digits
   ; name = type, min, max;
   ;
   ; type List: value will be index.


[Constants]

   ;----------------------------------------------------------------------------
   ; Constants Definition
   ; --------------------
   ;
   ; Scalar Values
   ; -------------
   ; The scaling and translation values are used as follows:
   ;    msValue   = userValue / scale - translate
   ;    userValue = (msValue + translate) * scale

   nPages              = 5
   pageIdentifier      = "\x30\x31",        "\x30\x32",     "\x30\x33",     "\x30\x34",     "\x30\x35"
   pageSize            = 65,                6,              20,             320,             18

   burnCommand         = "B",               "B",            "B",            "B",            "B"
   pageActivate        = "P%2i",            "P%2i",         "P%2i",         "P%2i",         "P%2i"
   pageReadCommand     = "R",               "R",            "R",            "R",            "R"

   pageValueWrite      = "W%2o%v",          "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v"

   pageActivationDelay = 10
   blockingFactor = 2048
   tableBlockingFactor = 2048
   delayAfterPortOpen=100
   ;validateArrayBounds = true
   blockReadTimeout = 2000
   ;tsWriteBlocks =      off
   interWriteDelay = 8

    endianness          = little

;--------------------------------------------------
; Sensor Calibration
;--------------------------------------------------
page = 1

    IATcalibM           = scalar, F32,      0,      "#/°C",     1, 0,  -100000, 100000, 2
    IATcalibN           = scalar, F32,      4,      "#",        1, 0,  -100000, 100000, 2
    CLTcalibM           = scalar, F32,      8,      "#/°C",     1, 0,  -100000, 100000, 2
    CLTcalibN           = scalar, F32,      12,      "#",       1, 0,  -100000, 100000, 2
    TPScalibM           = scalar, F32,      16,      "#/°",     1, 0,  -100000, 100000, 2
    TPScalibN           = scalar, F32,      20,      "#",       1, 0,  -100000, 100000, 2
    MAPcalibM           = scalar, F32,      24,      "#/Pa",    1, 0,  -100000, 100000, 2
    MAPcalibN           = scalar, F32,      28,      "#",       1, 0,  -100000, 100000, 2
    BAROcalibM          = scalar, F32,      32,      "#/Pa",    1, 0,  -100000, 100000, 2
    BAROcalibN          = scalar, F32,      36,      "#",       1, 0,  -100000, 100000, 2
    O2calibM            = scalar, F32,      40,      "#/AFR",   1, 0,  -100000, 100000, 2
    O2calibN            = scalar, F32,      44,      "#",       1, 0,  -100000, 100000, 2
    VBATcalibM          = scalar, F32,      48,      "#/V",     1, 0,  -100000, 100000, 2
    VBATcalibN          = scalar, F32,      52,      "#",       1, 0,  -100000, 100000, 2
    KNOCKcalibM         = scalar, F32,      56,      "#/#",     1, 0,  -100000, 100000, 2
    KNOCKcalibN         = scalar, F32,      60,      "#",       1, 0,  -100000, 100000, 2
    calibVersion        = scalar, U08,      64,      "#",       1, 0,        0,    255, 0

;--------------------------------------------------
; Decoder Setup
;--------------------------------------------------
page = 2

    DecCrankNoiseFilter = scalar, U08,      0,  "#",        1, 0,   1, 100, 0

    DecSyncCheckBeginPos= bits,   U08,      1,  [0:3], "CRK_POSITION_B2", "CRK_POSITION_B1", "CRK_POSITION_A2", "CRK_POSITION_A1", "CRK_POSITION_D2", "CRK_POSITION_D1", "CRK_POSITION_C2", "CRK_POSITION_C1", "CRK_POSITION_COUNT", "CRK_POSITION_UNDEFINED", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"

    DecSyncRatioMin     = scalar, U08,      2,  "%",        1, 0,   10, 100, 0
    DecSyncRatioMax     = scalar, U08,      3,  "%",        1, 0,   20, 100, 0

    DecTimeout          = scalar, U08,      4,  "s",        1, 0,   1, 254, 0

    DecoderVersion      = scalar, U08,      5,  "#",        1, 0,   0, 255, 0

;--------------------------------------------------
; Ignition Setup
;--------------------------------------------------
page = 3

    IgnMaxRpm               = scalar, U16,      0,  "rpm",      1, 0,  500, 10000, 0

    IgnDynMinRpm            = scalar, U16,      2,  "rpm",      1, 0,  1, 10000, 0

    IgnDynBasePos           = bits,   U08,      4,  [0:3], "CRK_POSITION_B2", "CRK_POSITION_B1", "CRK_POSITION_A2", "CRK_POSITION_A1", "CRK_POSITION_D2", "CRK_POSITION_D1", "CRK_POSITION_C2", "CRK_POSITION_C1", "CRK_POSITION_COUNT", "CRK_POSITION_UNDEFINED", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"

    IgnDynDwell             = scalar, U16,      5,  "µs",       1, 0,  500, 20000, 0

    IgnColdIdleCutoffRpm    = scalar, U16,      7,  "rpm",      1, 0,  0, 10000, 0
    IgnColdIdleCutoffClt    = scalar, U16,      9,  "K",        1, 0,  0,   500, 0
    IgnColdIdleIgnAdv       = scalar, U08,      11, "deg",      1, 0,  0,   100, 0
    IgnColdIdleDwell        = scalar, U16,      12,  "µs",      1, 0,  500, 20000, 0

    IgnCrankIgnPos          = bits,   U08,      14, [0:3], "CRK_POSITION_B2", "CRK_POSITION_B1", "CRK_POSITION_A2", "CRK_POSITION_A1", "CRK_POSITION_D2", "CRK_POSITION_D1", "CRK_POSITION_C2", "CRK_POSITION_C1", "CRK_POSITION_COUNT", "CRK_POSITION_UNDEFINED", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
    IgnCrankDwellPos        = bits,   U08,      15, [0:3], "CRK_POSITION_B2", "CRK_POSITION_B1", "CRK_POSITION_A2", "CRK_POSITION_A1", "CRK_POSITION_D2", "CRK_POSITION_D1", "CRK_POSITION_C2", "CRK_POSITION_C1", "CRK_POSITION_COUNT", "CRK_POSITION_UNDEFINED", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"

    IgnCoilSetup            = bits,   U08,      16, [0:0], "shared", "separate"
    IgnSparkDuration        = scalar, U16,      17,  "µs",       1, 0,  500, 20000, 0

    IgnitionVersion         = scalar, U08,      19,      "#",     1, 0,  0, 255, 0





;--------------------------------------------------
; ignition advance table TPS
;--------------------------------------------------
page = 4

      ignAdv_TPS_x  = array,  U16,   0,  [16],      "Rpm",  1.0,    0.0,   100, 10000,  0
      ignAdv_TPS_y  = array,  U16,   32, [16],      "TPS",  1.0,    0.0,   0.0, 90.0,   0
      ignAdv_TPS_z  = array,  U08,   64, [16x16],   "deg",  1.0,    0.0,   0.0, 100.0,  0

;--------------------------------------------------
; ignition advance table MAP
;--------------------------------------------------



;--------------------------------------------------
; Tuareg Setup
;--------------------------------------------------
page = 5

    TuaregSetupCrkPosTbl_B2     = scalar, U16,      0,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_B1     = scalar, U16,      2,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_A2     = scalar, U16,      4,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_A1     = scalar, U16,      6,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_D2     = scalar, U16,      8,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_D1     = scalar, U16,      10,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_C2     = scalar, U16,      12,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_C1     = scalar, U16,      14,  "deg",      1, 0,  0, 361, 0

    TuaregSetupDecoderDelay          = scalar, U16,      16,  "µs",       1, 0,   1, 500, 0





;-------------------------------------------------------------------------------

[ConstantsExtensions]


[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;  There are four special menu names, which when used append to the standard
   ;  menus of the same name instead of creating a new one.  The menu names
   ;  are "File", "Communications", "Tools" and "Help".
   ;
   ;----------------------------------------------------------------------------

menuDialog = main

menu = "Settings"
    subMenu = decoder_setup, "Decoder Setup"
    subMenu = tuareg_setup, "Tuareg Setup"
    subMenu = sensor_calibration, "Sensor Calibration"

;menu = "&Tuning"
;    subMenu = std_separator

menu = "Ignition"
    subMenu = ignition_setup,   "Ignition Setup"
    subMenu = ignAdvTable_TPS,  "Ignition Advance TPS"

;menu = "&Starting/Idle"
;    subMenu = std_separator

;menu = "Accessories"


menu = "Maintenance"
    subMenu = config_permission, "Config Permissions"
    subMenu = tool_box, "Service Tools"

;menu = "3D &Tuning Maps"
;    subMenu = std_separator

;------------------------------------------------------------------------------

[SettingContextHelp]
; constantName = "Help Text"
; tool tips tooltips
;Ensure all settings are defined as some MS2/BG words shipped with TS are not applicable.


[UserDefined]

; Enhanced TunerStudio dialogs can be defined here
; MegaTune will over look this section
; These dialogs will over-ride those in the UserDefined Section
; User defined are loaded first, then if one by the same name is defined here,
; it will replace the MegaTune definition

; dialog = name,   Title, Layout
;
; valid options for layout are xAxis, yAxis, border
; for an xAxis, each field added will be added from right to left
; A yAxis layout will add fields from top to bottom
; A border layout will expect an additional constraint to determine placement
; valid border constraints are north, South, East, West, Center
; all 5 do not need to be filled.

; The field name can be either a constant reference, or a reference to another
; dialog which will be added.
; dialogs can be nested and can be mixed with fields

dialog = sensor_calibration, "Sensor Calibration"
    field = "IAT sensor rate", IATcalibM
    field = "IAT sensor offset", IATcalibN
    field = "CLT sensor rate", CLTcalibM
    field = "CLT sensor offset", CLTcalibN
    field = "TPS sensor rate", TPScalibM
    field = "TPS sensor offset", TPScalibN
    field = "MAP sensor rate", MAPcalibM
    field = "MAP sensor offset", MAPcalibN
    field = "BARO sensor rate", BAROcalibM
    field = "BARO sensor offset", BAROcalibN
    field = "O2 sensor rate", O2calibM
    field = "O2 sensor offset", O2calibN
    field = "VBAT sensor rate", VBATcalibM
    field = "VBAT sensor offset", VBATcalibN
    field = "KNOCK sensor rate", KNOCKcalibM
    field = "KNOCK sensor offset", KNOCKcalibN
    field = "Version", calibVersion


dialog = decoder_setup, "Decoder Setup"

    field = "Crank Noise Filter", DecCrankNoiseFilter
    field = "Sync Check begin position", DecSyncCheckBeginPos
    field = "Sync Ratio min", DecSyncRatioMin
    field = "Sync Ratio max", DecSyncRatioMax
    field = "Timeout", DecTimeout
    field = "Version", DecoderVersion

dialog = tuareg_setup, "Tuareg Setup"
    field = "Trigger advance B2", TuaregSetupCrkPosTbl_B2
    field = "Trigger advance B1", TuaregSetupCrkPosTbl_B1
    field = "Trigger advance A2", TuaregSetupCrkPosTbl_A2
    field = "Trigger advance A1", TuaregSetupCrkPosTbl_A1
    field = "Trigger advance D2", TuaregSetupCrkPosTbl_D2
    field = "Trigger advance D1", TuaregSetupCrkPosTbl_D1
    field = "Trigger advance C2", TuaregSetupCrkPosTbl_C2
    field = "Trigger advance C1", TuaregSetupCrkPosTbl_C1
    field = "Decoder delay by VR", TuaregSetupDecoderDelay

dialog = ignition_setup, "Ignition Setup"
    field = "Rev Limiter", IgnMaxRpm
    field = "Dynamic Ignition min rpm", IgnDynMinRpm
    field = "Dynamic Ignition base position", IgnDynBasePos
    field = "Dynamic Ignition Dwell", IgnDynDwell
    field = "Cold Idle Cutoff rpm", IgnColdIdleCutoffRpm
    field = "Cold Idle Cutoff coolant temperature", IgnColdIdleCutoffClt
    field = "Cold Idle advance", IgnColdIdleIgnAdv
    field = "Cold Idle Dwell", IgnColdIdleDwell
    field = "Cranking spark position", IgnCrankIgnPos
    field = "Cranking Dwell position", IgnCrankDwellPos
    field = "Coil Setup", IgnCoilSetup
    field = "Spark Duration", IgnSparkDuration
    field = "Version", IgnitionVersion


dialog = config_permission, "Config Permissions"
    commandButton = "Sensor Calibration", cmdCalibModPerm
    commandButton = "Decoder Config", cmdDecoderModPerm
    commandButton = "Ignition Config", cmdIgnitionModPerm
    commandButton = "Tuareg Setup", cmdTuaregSetupModPerm
    commandButton = "Config Burn", cmdConfigBurnPerm
    commandButton = "Lock Config", cmdLockConfig


dialog = tool_box, "Service Tools"
    commandButton = "Reset ECU", cmdReset


;-------------------------------------------------------------------------------
; General help text

       help = helpGeneral, "Speeduino General Help"
        webHelp = "http://speeduino.com/wiki/index.php/Speeduino"
        text = "For current WIKI documentation, click the Web Help button,"

;-----------------------------------------------------------------------------

[ControllerCommands]
; commandName    = command1, command2, commandn...
; command in standard ini format, a command name can be assigned to 1 to n commands that will be executed in order.
;         This does not include any resultant protocol envelope data, only the response data itself.

; WARNING!! These commands bypass TunerStudio's normal memory synchronization. If these commands
; alter mapped settings (Constant) memory in the controller, TunerStudio will have an out of sync condition
; and may create error messages.
; It is expected that these commands would not typically alter any ram mapped to a Constant.

cmdCalibModPerm     = "\x4A\x63\x61\x6c\x23"
cmdDecoderModPerm   = "\x4A\x64\x65\x63\x23"
cmdTuaregSetupModPerm= "\x4A\x74\x75\x61\x23"
cmdIgnitionModPerm  = "\x4A\x69\x67\x6e\x23"
cmdConfigBurnPerm   = "\x4A\x62\x72\x6E\x21"
cmdLockConfig       = "\x4A\x6c\x6f\x63\x6b"

cmdReset            = "\x44\x72\x73"


; -------------------------------------------------------------
; Help down here
[SettingContextHelp]


[CurveEditor]


[TableEditor]

; Ignition Advance Table TPS
table = ignAdvTable_TPS,    ignAdvMap_TPS,    "Ignition Advance vs. TPS", 4

    xBins = ignAdv_TPS_x, rpm
    yBins = ignAdv_TPS_y, tps
    zBins = ignAdv_TPS_z

    gridHeight  = 3.0
    upDownLabel = "ADVANCED", "RETARDED"



;-------------------------------------------------------------------------------

[GaugeConfigurations]

   ;-------------------------------------------------------------------------------
   ;  Notes on some of the gauges.
   ;
   ;  The accelEnrichGauge is now a composite of both acceleration enrichment
   ;  and deceleration enleanment numbers.  See the definition of the variable
   ;  accDecEnrich in the OutputChannels section.
   ;
   ;-------------------------------------------------------------------------------
   ; Define a gauge's characteristics here, then go to a specific layout
   ; block (Tuning or FrontPage) and use the name you've defined here to
   ; display that gauge in a particular position.
   ;
   ; Name  = Case-sensitive, user-defined name for this gauge configuration.
   ; Var   = Case-sensitive name of variable to be displayed, see the
   ;         OutputChannels block in this file for possible values.
   ; Title = Title displayed at the top of the gauge.
   ; Units = Units displayed below value on gauge.
   ; Lo    = Lower scale limit of gauge.
   ; Hi    = Upper scale limit of gauge.
   ; LoD   = Lower limit at which danger color is used for gauge background.
   ; LoW   = Lower limit at which warning color is used.
   ; HiW   = Upper limit at which warning color is used.
   ; HiD   = Upper limit at which danger color is used.
   ; vd    = Decimal places in displayed value
   ; ld    = Label decimal places for display of Lo and Hi, above.

   ;Name               Var            Title                 Units     Lo     Hi     LoD    LoW   HiW   HiD vd ld

   tachometer        = rpm,           "Engine Speed",       "RPM",     0,  10000,    -1,   -1,  8000, 9000, 0, 0
   tpsGauge          = tps,           "Throttle", "deg",    0,   100,     -1,     1,   90,  100, 0, 0
   mapGauge          = map,           "Engine MAP",             "kPa",          0,      120,    0,      20,  105,  110, 0, 0
   cltGauge          = clt,           "Coolant Temp",       "°C", -40,   120,    -15,     0,   95,  105, 0, 0
   iatGauge          = iat,           "Inlet Air Temp",     "°C", -40,   50,    -15,     0,   40,  45, 0, 0
   advanceGauge      = advance,       "Spark Advance",      "°BTDC", 50, -10,      0,     0,    45,    50, 0, 0
   afrGauge          = afr,           "AFR",    			 "",        7,    25,     10,    11,   16,   17, 2, 2
   voltMeter         = batteryVoltage, "Battery Voltage",    "volts",   0,    15,      8,    11,   15,   16, 2, 2

;-------------------------------------------------------------------------------

[FrontPage]


   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4
   ;    5  6  7  8

   gauge1 = tachometer
   gauge2 = tpsGauge
   gauge3 = mapGauge
   gauge4 = iatGauge
   gauge5 = cltGauge
   gauge6 = advanceGauge
   gauge7 = afrGauge
   gauge8 = voltMeter


   ;----------------------------------------------------------------------------
   ; Indicators
   ;             expr                   off-label       	on-label,       	off-bg, off-fg, on-bg,  on-fg
   indicator = { comCalModPerm }, 	    "Sensor Calib",		"Sensor Calib", 	white,	black, 	yellow,	black
   indicator = { comIgnModPerm }, 	    "Ignition Config",  "Ignition Config",  white,	black, 	yellow,	black
   indicator = { comDecModPerm }, 	    "Decoder Config",   "Decoder Config", 	white,	black, 	yellow,	black
   indicator = { comBurnPerm   }, 	    "Config Burn",      "Config Burn",      white,	black, 	yellow,	black

   indicator = { tCrankingMode  }, 	    "CRANK",  			"CRANK",     		white,  black,  green,  black
   indicator = { tLimpMode      }, 		"LIMP",  			"LIMP",     		white,  black,  red,   	black
   indicator = { tDiagMode      }, 		"DIAG",  			"DIAG",     		white,  black,  yellow, black

   indicator = { ignDynamic }, 			"dyn ign",     		"dyn ign",       	        white, black,   green,  black
   indicator = { ignRevLimit }, 		"rev limit",     	"rev limit",    	white, black,   red,    black
   indicator = { ignColdIdle }, 		"cold idle",   	"cold idle",    white, black,   green,  black

   indicator = { tO2SensorErr }, 		"O2",     			"O2",    			white, black,   red,    black
   indicator = { tTpsSensorErr }, 		"TPS",     			"TPS",    			white, black,   red,    black
   indicator = { tIatSensorErr }, 		"IAT",     			"IAT",    			white, black,   red,    black
   indicator = { tCltSensorErr }, 		"CLT",     			"CLT",    			white, black,   red,    black
   indicator = { tVbatSensorErr }, 		"VBAT",     		"VBAT",    			white, black,   red,    black
   indicator = { tKnockSensorErr }, 	"KNOCK",     		"KNOCK",    		white, black,   red,    black
   indicator = { tBaroSensorErr }, 		"BARO",     		"BARO",    			white, black,   red,    black
   indicator = { tGearSensorErr }, 		"GEAR",     		"GEAR",    			white, black,   red,    black
   indicator = { tMapSensorErr }, 		"MAP",     			"MAP",    			white, black,   red,    black
   indicator = { tCiSensorErr }, 		"CIS",     			"CIS",    			white, black,   red,    black


;-------------------------------------------------------------------------------


[RunTime]


;-------------------------------------------------------------------------------

[Tuning]

   font            = "Courier", 14
   spotDepth       =   2 ; 0 = no indicators, 1 = Z only, 2 = XYZ indicators.
   cursorDepth     =   2 ; Same as spot depth.

   ; The four radio buttons on the tuning screen select a "page" of six
   ; gauges.  The gauge numbering is the same as the front page, across
   ; then down.
   ;             1  2
   ;             3  4
   ;             5  6
   ;
   ; gaugeColumns allows you to hide or show gauges in column 2 (i.e.,
   ; gauges 2, 4 and 6).

   gaugeColumns = 2 ; Only 1 or 2 are valid.

   ;----------------------------------------------------------------------------
   ; Notes on tuning screen gauges:
   ;   pageButtons = Labels for radio buttons at bottom of tuning dialog.
   ;
   ;   Gauge 2 previously switched automatically to be tpsGauge when alpha-n
   ;   was enabled, but you need to do it manually now.
   ;----------------------------------------------------------------------------
   ;              Page 1            Page 2             Page 3            Page 4
   pageButtons  = "&EGO",           "&WUE",            "PW&1",           "PW&2"
   gauge1       = tachometer,       tachometer,        tachometer,       tachometer
   gauge2       = mapGauge,         mapGauge,          mapGauge,         mapGauge
   gauge3       = egoGauge,         egoGauge,          egoGauge,         egoGauge
   gauge4       = egoCorrGauge,     warmupEnrichGauge, pulseWidthGauge,  pulseWidthGauge
   gauge5       = veBucketGauge,    veBucketGauge,     veBucketGauge,    veBucketGauge
   gauge6       = accelEnrichGauge, accelEnrichGauge,  dutyCycleGauge,   dutyCycleGauge

;-------------------------------------------------------------------------------

[OutputChannels]
   ; The number of bytes MegaTune or TunerStudio should expect as a result
   ; of sending the "A" command to Tuareg is determined
   ; by the value of ochBlockSize, so be very careful when
   ; you change it.

   deadValue        = { 0 }
   ochGetCommand    = "A"
   ochBlockSize     =  50


   secl             = scalar, U08,  0, "sec",    1.000, 0.000

  ; tuareg           = scalar, U32,  1, "bits",   1.000, 0.000
    tConfigErr       = bits,    U32,    1, [0:0]
    tScheduleErr     = bits,    U32,    1, [1:1]
    tO2SensorErr     = bits,    U32,    1, [2:2]
    tTpsSensorErr    = bits,    U32,    1, [3:3]
    tIatSensorErr    = bits,    U32,    1, [4:4]
    tCltSensorErr    = bits,    U32,    1, [5:5]
    tVbatSensorErr   = bits,    U32,    1, [6:6]
    tKnockSensorErr  = bits,    U32,    1, [7:7]
    tBaroSensorErr   = bits,    U32,    1, [8:8]
    tGearSensorErr   = bits,    U32,    1, [9:9]
    tMapSensorErr    = bits,    U32,    1, [10:10]
    tCiSensorErr     = bits,    U32,    1, [11:11]
    tSpareErr        = bits,    U32,    1, [12:15]
    tCrankingMode    = bits,    U32,    1, [16:16]
    tLimpMode        = bits,    U32,    1, [17:17]
    tDiagMode        = bits,    U32,    1, [18:18]
    tSpareBits       = bits,    U32,    1, [19:31]

   ;ignition         = scalar,  U16,    5, "bits",   1.000, 0.000
    ignValid         = bits,    U16,    5, [0:0]
    ignDefCtrl       = bits,    U16,    5, [1:1]
    ignCrankCtrl     = bits,    U16,    5, [2:2]
    ignDynamic       = bits,    U16,    5, [3:3]
    ignRevLimit      = bits,    U16,    5, [4:4]
    ignSeqMode       = bits,    U16,    5, [5:5]
    ignColdIdle      = bits,    U16,    5, [6:6]
    ignAdvMap        = bits,    U16,    5, [7:7]
    ignAdvTps        = bits,    U16,    5, [8:8]
    ;ignSpare         = bits,    U16,    5, [9:15]

   ;comm             = bits, U08,  7, "bits",   1.000, 0.000
    comCalModPerm   = bits,    U08,    7, [0:0]
    comIgnModPerm   = bits,    U08,    7, [1:1]
    comDecModPerm   = bits,    U08,    7, [2:2]
    comBurnPerm     = bits,    U08,    7, [3:3]
    ;comSpare        = bits,    U08,    7, [4:7]

   rpm              = scalar,   U16,    8, "rpm",    1.000, 0.000
   rpmDOT           = scalar,   F32,    10, "rpm/s",  1.000, 0.000
   advance          = scalar,   U16,    14, "deg",    1.000, 0.000
   dwell	        = scalar,   U16,    16, "ms",     0.100, 0.00
   map              = scalar,   F32,    18, "kpa",    1.000, 0.000
   baro             = scalar,   F32,    22, "kpa",      1.000, 0.000
   tps              = scalar,   F32,    26, "deg",      1.000, 0.000
   TPSdot           = scalar,   F32,    30, "deg/s",    10.00, 0.000
   iat              = scalar,   F32,    34, "K",    1.000, -273.15
   clt              = scalar,   F32,    38, "K",    1.000, -273.15
   batteryVoltage   = scalar,   F32,    42, "V",      1.000, 0.000
   afr              = scalar,   F32,    46, "O2",     1.000, 0.000


   time             = { timeNow } ; "timeNow" is a parameterless built-in function.
   seconds          = { secl };

   throttle         = { tps }, "%"



   ;Manifold pressure in weirdo units
   intake_vac   = { baro - map }

;-------------------------------------------------------------------------------

[Datalog]
   ; Full datalog.
   ;
   ; Default user-defined log emulates the full datalog.
   ;
   ; The entries are saved in the datalog file in the order in
   ; which they appear in the list below.
   ;
   ;   Channel - Case sensitive name of output channel to be logged.
   ;   Label   - String written to header line of log.  Be careful
   ;             about changing these, as programs like MSLVV and
   ;             MSTweak key off specific column names.
   ;   Type    - Data type of output, converted before writing.
   ;   Format  - C-style output format of data.
   ;
   ;       Channel          Label          Type    Format
   ;       --------------   ----------     -----   ------
   entry = time,            "Time",        float,  "%.3f"
   ;entry = tuareg,          "Tuareg",      int,    "%d"
   ;entry = ignition,        "Ignition",    int,    "%d"
  ; entry = comm,            "Comm",        int,    "%d"
   entry = rpm,             "RPM",         int,    "%d"
   entry = rpmDOT,          "rpm/s",       int,    "%d"
   entry = advance,         "Advance deg",     int,    "%d"
   entry = dwell,           "Dwell ms",       int,    "%d"
   entry = map,             "MAP kPa",     float,  "%.3f"
   entry = baro,            "BARO kPa",     float,  "%.3f"
   entry = tps,             "TPS deg",     float,  "%.3f"
   entry = TPSdot,          "TPS DOT",     float,  "%.3f"
   entry = iat,             "IAT",         float,  "%.3f"
   entry = clt,             "CLT",         float,  "%.3f"
   entry = batteryVoltage,  "Battery V",   float,  "%.3f"
   entry = afr,             "AFR",          float,  "%.3f"
   entry = intake_vac,      "invac kPa",      float,  "%.3f"




[LoggerDefinition]
    ; valid logger types: composite, tooth, trigger, csv



[Tools]
	;addTool = toolName, PanelName
	;addTool = veTableGenerator, "VE Table Generator", veTable1Tbl
	;addTool = afrTableGenerator, "AFR Table Generator", afrTable1Tbl


[VeAnalyze]

