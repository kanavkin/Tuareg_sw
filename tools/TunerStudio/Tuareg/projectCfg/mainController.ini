;-------------------------------------------------------------------------------
#unset CAN_COMMANDS
#unset enablehardware_test
;----------------------------------------------------------
;
; A note to the developer: Always remember how the data is lay out in the ECU memory!
; STM32F401 is little endian => byte significance ~ memory address
;
; example: 0xA0A1A2A3 in memory: |A3|A2|A1|A0|
;
;------------------------------------------------------------

[MegaTune]
   MTversion      = 2.25 ; MegaTune itself; needs to match exec version.

   queryCommand   = "Q"

   ;signature      = "speeduino 201708"
   signature    = "rusEFI v1.04"

   versionInfo    = "S"  ; Put this in the title bar.

[TunerStudio]
   iniSpecVersion = 3.49

;-------------------------------------------------------------------------------

[SettingGroups]
   ; the referenceName will over-ride previous, so if you are creating a
   ; settingGroup with a reference name of lambdaSensor, it will replace the
   ; setting group defined in the settingGroups.xml of the TunerStudio config
   ; folder. If is is an undefined referenceName, it will be added.
   ; keyword    =  referenceName,  DisplayName




[PcVariables]
   ; valid types: boolean, double, int, list
   ;
   ; no offset as they are local variables.
   ; entry format the same as Constants, except there is no offset.
   ; arrays are not yet supported.
   ; name = class,  type,    shape,  units,       scale, translate,    lo,      hi, digits
   ; name = type, min, max;
   ;
   ; type List: value will be index.
   serviceActivationOnTime          = scalar, U08,  "ms",   1, 0,   1,    255, 0, noMsqSave
   serviceActivationOffTime         = scalar, U08,  "ms",   1, 0,   1,    255, 0, noMsqSave
   serviceActivationEnd             = scalar, U16,   "#",   1, 0,   1,    10000, 0, noMsqSave

   serviceTachAct1000               = scalar, U08,  "#",   1, 0,   0,    255, 0, noMsqSave
   serviceTachAct100                = scalar, U08,  "#",   1, 0,   0,    255, 0, noMsqSave
   serviceTachAct1                  = scalar, U08,  "#",   1, 0,   0,    255, 0, noMsqSave

   ; no idea why tunerstudio needs this
   rpmhigh = scalar, U16, "rpm", 1, 0, 0, 30000, 0

   syslogtypes_list = bits, U08, [6:7], "II", "WW", "EE", "??"



[Constants]

   ;----------------------------------------------------------------------------
   ; Constants Definition
   ; --------------------
   ;
   ; Scalar Values
   ; -------------
   ; The scaling and translation values are used as follows:
   ;    msValue   = userValue / scale - translate
   ;    userValue = (msValue + translate) * scale

   nPages              = 23

    ;                   calibration         clt             decoder         ignition        advmap-tps      dwellmap        fueling         vemap-tps       vemap-map       afrtgtTPS       afrtgtMAP       accelcompTPS    accelcompMAP    warmupcomp      inj_timing      inj_phase       crankingfuel    baro            chargetemp      tuareg          tach            syslog          faultlog
   pageIdentifier      = "\x30\x31",        "\x30\x32",     "\x30\x33",     "\x30\x34",     "\x30\x35",     "\x30\x36",     "\x30\x37",     "\x30\x38",     "\x30\x39",     "\x31\x30",     "\x31\x31",     "\x31\x32",     "\x31\x33",     "\x31\x34",     "\x31\x35",     "\x31\x36",     "\x31\x37",     "\x31\x38",     "\x31\x39",     "\x32\x30",     "\x32\x31",     "\x32\x32",     "\x32\x33"
   pageSize            = 118,               64,             15,             16,             320,            64,             49,             320,            320,            320,            320,            64,             64,             64,             64,             64,             64,             64,             320,            58,             64,             210,            7

   burnCommand         = "B",               "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "B",            "",             ""
   pageActivate        = "P%2i",            "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i",         "P%2i"
   pageReadCommand     = "R",               "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R",            "R"

   pageValueWrite      = "W%2o%v",          "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "W%2o%v",       "",             ""
#   pageChunkWrite      = "U%2o%2c%2v",      "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",   "U%2o%2c%2v",       "",             ""

   pageActivationDelay = 10
   blockingFactor = 330
   tableBlockingFactor = 2048
   delayAfterPortOpen=100
   ;validateArrayBounds = true
   blockReadTimeout = 2000
   ;tsWriteBlocks =      off
   interWriteDelay = 8

    endianness          = little


    #define CRKPOSLABELS = "CRK_POSITION_B2", "CRK_POSITION_B1", "CRK_POSITION_A2", "CRK_POSITION_A1", "CRK_POSITION_D2", "CRK_POSITION_D1", "CRK_POSITION_C2", "CRK_POSITION_C1", "CRK_POSITION_COUNT", "CRK_POSITION_UNDEFINED", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
    #define PHASELABELS = "CYL1_COMP", "CYL1_EX", "UNDEFINED", "INVALID"
    #define DECODERSENSINGLABELS = "DISABLED", "RISE", "FALL", "EDGE", "INVERT", "INVALID", "INVALID", "INVALID"

    #define SYSLOGTYPELABELS = "II", "WW", "EE", "INVALID"
    #define ONOFFLABELS = "Off", "On"
    #define HIGHLOWLABELS = "low level", "high level"

;--------------------------------------------------
; Sensor Calibration
;--------------------------------------------------
page = 1

    calibVersion        = scalar, U08,  0,          "#",    1, 0,        0,    255, 0

    O2calibM            = scalar, F32,  nextOffset, "#/AFR",1, 0,  -100000, 100000, 2
    O2calibN            = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    O2calibMin          = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    O2calibMax          = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    O2sampleLen         = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    TPScalibM           = scalar, F32,  nextOffset, "#/°",  1, 0,  -100000, 100000, 2
    TPScalibN           = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    TPScalibMin         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    TPScalibMax         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    TPSsampleLen        = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    IATcalibM           = scalar, F32,  nextOffset, "#/°C", 1, 0,  -100000, 100000, 2
    IATcalibN           = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    IATcalibMin         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    IATcalibMax         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    IATsampleLen        = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    CLTcalibM           = scalar, F32,  nextOffset, "#/°C", 1, 0,  -100000, 100000, 2
    CLTcalibN           = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    CLTcalibMin         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    CLTcalibMax         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    CLTsampleLen        = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    VBATcalibM          = scalar, F32,  nextOffset, "#/V",  1, 0,  -100000, 100000, 2
    VBATcalibN          = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    VBATcalibMin        = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    VBATcalibMax        = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    VBATsampleLen       = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    KNOCKcalibM         = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    KNOCKcalibN         = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    KNOCKcalibMin       = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    KNOCKcalibMax       = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    KNOCKsampleLen      = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    BAROcalibM          = scalar, F32,  nextOffset, "#/kPA",1, 0,  -100000, 100000, 2
    BAROcalibN          = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    BAROcalibMin        = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    BAROcalibMax        = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    BAROsampleLen       = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    GEARcalibM          = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    GEARcalibN          = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    GEARcalibMin        = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    GEARcalibMax        = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    GEARsampleLen       = scalar, U08,  nextOffset, "#",    1, 0,        0,   255, 0

    MAPcalibM           = scalar, F32,  nextOffset, "#/kPA",1, 0,  -100000, 100000, 2
    MAPcalibN           = scalar, F32,  nextOffset, "#",    1, 0,  -100000, 100000, 2
    MAPcalibMin         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    MAPcalibMax         = scalar, U16,  nextOffset, "#",    1, 0,        0,   4095, 0
    MAPsampleLen        = scalar, U08,  nextOffset, "revs", 1, 0,        1,   255, 0


    ; size := 181 vs 118

;--------------------------------------------------
; CLT inverse lookup table
;--------------------------------------------------
page = 2

    invCLT_x    = array,  U16,   0,  [16],      "raw#",      1.0,    0.0,   0, 4096,  0
    invCLT_y    = array,  U16,   32, [16],      "K",         1.0,    0.0,   0, 4500,  0


;--------------------------------------------------
; Decoder Setup
;--------------------------------------------------
page = 3

    DecoderVersion      = scalar, U08,      0,  "#",        1, 0,   0, 255, 0
    DecTimeout          = scalar, U08,      nextOffset,  "s",        1, 0,   1, 254, 0
    DecCrankNoiseFilter = scalar, U08,      nextOffset,  "#",        1, 0,   1, 100, 0

    DecKeyBeginSensing  = bits,   U08,      nextOffset,  [0:7], $DECODERSENSINGLABELS
    DecKeyEndSensing    = bits,   U08,      nextOffset,  [0:7], $DECODERSENSINGLABELS

    DecSyncRatioMin     = scalar, U08,      nextOffset,  "%",        1, 0,   10, 100, 0
    DecSyncRatioMax     = scalar, U08,      nextOffset,  "%",        1, 0,   20, 100, 0
    DecCamNoiseFilter   = scalar, U08,      nextOffset,  "#",        1, 0,   1, 100, 0
    DecLobeBeginSensing = bits,   U08,      nextOffset,  [0:7], $DECODERSENSINGLABELS
    DecLobeEndSensing   = bits,   U08,      nextOffset,  [0:7], $DECODERSENSINGLABELS
    DecCisEnablePos     = bits,   U08,      nextOffset, [0:7], $CRKPOSLABELS
    DecCisDisablePos    = bits,   U08,      nextOffset, [0:7], $CRKPOSLABELS
    DecCisTriggeredPhase= bits,   U08,      nextOffset,  [0:7], $PHASELABELS
    DecCisMinAngle      = scalar, U08,      nextOffset,  "deg",        1, 0,   5, 100, 0
    DecCisSyncThres     = scalar, U08,      nextOffset,  "#",        1, 0,   2, 200, 0
    ; size := 15

;--------------------------------------------------
; Ignition Setup
;--------------------------------------------------
page = 4

    IgnitionVersion         = scalar, U08,      0,      "#",     1, 0,  0, 255, 0

    IgnDynMinRpm            = scalar, U16,      nextOffset,  "rpm",      1, 0,  1, 10000, 0
    IgnDynBasePos           = bits,   U08,      nextOffset,  [0:7], $CRKPOSLABELS

    IgnColdIdleCutoffRpm    = scalar, U16,      nextOffset,  "rpm",      1, 0,  0, 10000, 0
    IgnColdIdleCutoffClt    = scalar, U16,      nextOffset,  "K",        1, 0,  0,   500, 0
    IgnColdIdleIgnAdv       = scalar, U08,      nextOffset, "deg",      1, 0,  0,   100, 0
    IgnColdIdleDwell        = scalar, U16,      nextOffset,  "µs",      1, 0,  500, 20000, 0

    IgnCrankIgnPos          = bits,   U08,      nextOffset, [0:7], $CRKPOSLABELS
    IgnCrankDwellPos        = bits,   U08,      nextOffset, [0:7], $CRKPOSLABELS

    IgnFeatDynamic          = bits,   U08,      nextOffset, [0:0], $ONOFFLABELS
    IgnFeatCranking         = bits,   U08,      lastOffset, [1:1], $ONOFFLABELS
    IgnFeatColdIdle         = bits,   U08,      lastOffset, [2:2], $ONOFFLABELS
    IgnFeatSequential       = bits,   U08,      lastOffset, [3:3], $ONOFFLABELS
    IgnFeatSecondCoil       = bits,   U08,      lastOffset, [4:4], $ONOFFLABELS

    IgnSparkDuration        = scalar, U16,      nextOffset,  "µs",       1, 0,  500, 20000, 0
    ; size := 16


;--------------------------------------------------
; ignition advance table TPS
;--------------------------------------------------
page = 5

    ignAdv_TPS_x  = array,  U16,   0,  [16],      "Rpm",  1.0,    0.0,   100, 10000,  0
    ignAdv_TPS_y  = array,  U16,   32, [16],      "TPS",  1.0,    0.0,   0.0, 90.0,   0
    ignAdv_TPS_z  = array,  U08,   64, [16x16],   "deg",  1.0,    0.0,   0.0, 100.0,  0
    ;size := 320

;--------------------------------------------------
; ignition advance table MAP
;--------------------------------------------------

;--------------------------------------------------
; ignition dwell table
;--------------------------------------------------
page = 6

    ignDwell_x  = array,  U16,   0,  [16],      "Rpm",      1.0,    0.0,   500, 10000,  0
    ignDwell_y  = array,  U16,   32, [16],      "us",       1.0,    0.0,   500, 65000,   0

;--------------------------------------------------
; Fueling Setup
;--------------------------------------------------
page = 7

    FuelingSetupVersion                     = scalar, U08,      0,              "#",    1, 0,  0, 255, 0
    FuelingSetupCylinderVolume              = scalar, U16,      nextOffset,     "ccm",  1, 0,  50, 20000, 0
    FuelingSetupInjRefPos                   = bits,   U08,      nextOffset,      [0:7], $CRKPOSLABELS

    ;injectors
    FuelingSetupInj1Rate                    = scalar, U16,      nextOffset,      "mg/s", 1, 0,  100, 20000, 0
    FuelingSetupInj2Rate                    = scalar, U16,      nextOffset,     "mg/s", 1, 0,  100, 20000, 0
    FuelingSetupInjMaxDc                    = scalar, U08,      nextOffset,     "%",    1, 0,  0, 255, 0

    ;legacy AE
    FuelingSetupAccelCompThresTPS           = scalar, F32,      nextOffset,     "°/s",    1, 0,  10, 2500, 1
    FuelingSetupAccelCompThresMAP           = scalar, F32,      nextOffset,     "kPa/s",    1, 0,  10, 2500, 1
    FuelingSetupDecelCompThresTPS           = scalar, F32,      nextOffset,     "°/s",    1, 0,  -2500, -10, 1
    FuelingSetupDecelCompThresMAP           = scalar, F32,      nextOffset,     "kPa/s",    1, 0,  -2500, -10, 1

    FuelingSetupAccelCompTaperFactor        = scalar, F32,      nextOffset,     "1",    1, 0,  0, 1, 1
    FuelingSetupAccelCompScalingThresRpm    = scalar, U16,      nextOffset,     "rpm",    1, 0,  4000, 10000, 1
    FuelingSetupAccelCompScalingMaxRpm      = scalar, U16,      nextOffset,     "rpm",    1, 0,  6000, 10000, 1

    FuelingSetupColdAccelPct                = scalar, U08,      nextOffset,     "%",    1, 0,  0, 100, 0
    FuelingSetupDecelCompM                  = scalar, U16,      nextOffset,     "ug",    1, 0,  0, 16000, 0
    FuelingSetupAccelCompCyc                = scalar, U08,      nextOffset,     "cyc",    1, 0,  0, 255, 0
    FuelingSetupDecelCompCyc                = scalar, U08,      nextOffset,     "cyc",    1, 0,  0, 255, 0
    FuelingSetupAccelCompTaperThres         = scalar, U08,      nextOffset,     "cyc",    1, 0,  0, 255, 0

    FuelingSetupAsCompPct                   = scalar, U08,      nextOffset,     "%",    1, 0,  0, 255, 0
    FuelingSetupAsCompCyc                   = scalar, U08,      nextOffset,     "cyc",    1, 0,  0, 255, 0
    FuelingSetupAsCompThres                 = scalar, U16,      nextOffset,     "K",    1, 0,  0, 500, 0

    FuelingSetupSPDmin                      = scalar, U16,      nextOffset,      "rpm",  1, 0,  0, 9000, 0
    FuelingSetupSPDmax                      = scalar, U16,      nextOffset,      "rpm",  1, 0,  0, 9000, 0

    FuelingSetupDryCrankTPSthrs             = scalar, U08,      nextOffset,      "%",  1, 0,  0, 100, 0

    FuelingSetupFeatLoadComp                = bits,   U08,      nextOffset, [0:0], $ONOFFLABELS
    FuelingSetupFeatLegacyAE                = bits,   U08,      lastOffset, [1:1], $ONOFFLABELS
    FuelingSetupFeatSeqMode                 = bits,   U08,      lastOffset, [2:2], $ONOFFLABELS
    FuelingSetupFeatWUE                     = bits,   U08,      lastOffset, [3:3], $ONOFFLABELS
    FuelingSetupFeatASE                     = bits,   U08,      lastOffset, [4:4], $ONOFFLABELS
    FuelingSetupFeatDryCrank                = bits,   U08,      lastOffset, [5:5], $ONOFFLABELS
    FuelingSetupFeatBAROComp                = bits,   U08,      lastOffset, [6:6], $ONOFFLABELS
    ;size = 51


;--------------------------------------------------
; VeTable_TPS
;--------------------------------------------------
page = 8

    fuelVE_TPS_x  = array,  U16,   0,  [16],      "Rpm",  1.0,    0.0,   100, 10000,  0
    fuelVE_TPS_y  = array,  U16,   32, [16],      "TPS",  1.0,    0.0,   5.0, 90.0,   0
    fuelVE_TPS_z  = array,  U08,   64, [16x16],   "prc",  1.0,    0.0,   0.0, 100.0,  0



;--------------------------------------------------
; VeTable_MAP
;--------------------------------------------------
page = 9

    fuelVE_MAP_x  = array,  U16,   0,  [16],      "Rpm",  1.0,    0.0,   100, 10000,  0
    fuelVE_MAP_y  = array,  U16,   32, [16],      "MAP",  1.0,    0.0,   30.0, 110.0,   0
    fuelVE_MAP_z  = array,  U08,   64, [16x16],   "prc",  1.0,    0.0,   0.0, 100.0,  0



;--------------------------------------------------
; AfrTable_TPS
;--------------------------------------------------
page = 10

;   name           = class, type, offset, shape,   units, scale, translate, lo, high, digits
    fuelAFR_TPS_x  = array,  U16,   0,  [16],      "Rpm",  1.0,    0.0,   100, 10000,  0
    fuelAFR_TPS_y  = array,  U16,   32, [16],      "TPS",  1.0,    0.0,   5.0, 90.0,   0
    fuelAFR_TPS_z  = array,  U08,   64, [16x16],   "AFR",  0.1,    0.0,   0.0, 25.0,   1



;--------------------------------------------------
; AfrTable_MAP
;--------------------------------------------------
page = 11

;   name           = class, type, offset, shape,   units, scale, translate, lo, high, digits
    fuelAFR_MAP_x  = array,  U16,   0,  [16],      "Rpm",  1.0,    0.0,   100, 10000,   0
    fuelAFR_MAP_y  = array,  U16,   32, [16],      "MAP",  1.0,    0.0,   30.0, 110.0,   0
    fuelAFR_MAP_z  = array,  U08,   64, [16x16],   "AFR",  0.1,    0.0,   0.0, 25.0,    1


;--------------------------------------------------
; acceleration compensation table - TPS
;--------------------------------------------------
page = 12

    AccelCompTPS_x  = array,  U16,   0,  [16],      "°/s",  1.0,    0.0,   20, 1000,  0
    AccelCompTPS_y  = array,  U16,   32, [16],      "ug",    1.0,    0.0,   0,  65200,   0

;--------------------------------------------------
; acceleration compensation table - MAP
;--------------------------------------------------
page = 13

    AccelCompMAP_x  = array,  U16,   0,  [16],      "kPa/s",  1.0,    0.0,   20, 1000,  0
    AccelCompMAP_y  = array,  U16,   32, [16],      "ug",      1.0,    0.0,   0,  65200,   0


;--------------------------------------------------
; warm up compensation table
;--------------------------------------------------
page = 14

    WarmUpComp_x  = array,  U16,   0,  [16],      "°C",  1.0,    -273.15,   -50, 150,  0
    WarmUpComp_y  = array,  U16,   32, [16],      "%",    0.1,    0.0,   0,  200,   1


;--------------------------------------------------
; injector dead time table
;--------------------------------------------------
page = 15

    InjDead_x  = array,  U16,   0,  [16],      "mV",  0.001,    0.0,   6, 15,  1
    InjDead_y  = array,  U16,   32, [16],      "us",  1.0,    0.0,   500, 10000,   0

;--------------------------------------------------
; injector phase table
;--------------------------------------------------
page = 16

    InjPhase_x  = array,  U16,   0,  [16],      "Rpm",  1.0,    0.0,   500, 10000,  0
    InjPhase_y  = array,  U16,   32, [16],      "deg",  1.0,    0.0,   0.0, 720.0,  0


;--------------------------------------------------
; cranking base fuel table
;--------------------------------------------------
page = 17

    CrankFuel_x  = array,  U16,   0,  [16],      "°C",  1.0,    -273.15,   -50, 150,  0
    CrankFuel_y  = array,  U16,   32, [16],      "ug",  1.0,    0.0,   0,  65560,   0


;--------------------------------------------------
; BARO correction table
;--------------------------------------------------
page = 18

    BAROcorr_x  = array,  U16,   0,  [16],  "hPa",    1,     0,   200, 1200,  0
    BAROcorr_y  = array,  U16,   32, [16],  "%",    1.0,  -100,     -30,  50,  0


;--------------------------------------------------
; charge temperature table
;--------------------------------------------------
page = 19

    ChargeTemp_x  = array,  U16,   0,  [16],      "°C",  1.0,    -273.15,   -50, 150,  0
    ChargeTemp_y  = array,  U16,   32,  [16],      "°C",  1.0,    -273.15,   -50, 150,  0
    ChargeTemp_z  = array,  U08,   64,  [16x16],   "°C",  1.0,    -100,   -100, 155,  0
    ;size := 320



;--------------------------------------------------
; Tuareg Setup
;--------------------------------------------------
page = 20

    TuaregSetupVersion          = scalar, U08,      0,      "#",     1, 0,  0, 255, 0

    TuaregSetupCrkPosTbl_B2     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_B1     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_A2     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_A1     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_D2     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_D1     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_C2     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0
    TuaregSetupCrkPosTbl_C1     = scalar, U16,      nextOffset,  "deg",      1, 0,  0, 361, 0

    TuaregSetupDecoderDelay     = scalar, U16,      nextOffset,  "µs",       1, 0,   1, 500, 0

    TuaregSetupMaxRpm           = scalar, U16,      nextOffset,  "rpm",      1, 0,  500, 10000, 0
    TuaregSetupLimpMaxRpm       = scalar, U16,      nextOffset,  "rpm",      1, 0,  500, 6000, 0

    TuaregSetupOverheatThres    = scalar, U16,      nextOffset,  "°C",      1, -273.15,  50, 150, 0

    TuaregSetupStandbyTimeout   = scalar, U08,      nextOffset,  "s",      1, 0,  1, 150, 0

    TuaregSetupCrankEndRpm      = scalar, U16,      nextOffset,  "rpm",      1, 0,  10, 2000, 0

    TuaregSetupGear_1           = scalar, F32,      nextOffset, "rpm/kmh",   1, 0,  0, 500, 2
    TuaregSetupGear_2           = scalar, F32,      nextOffset,  "rpm/kmh",   1, 0,  0, 500, 2
    TuaregSetupGear_3           = scalar, F32,      nextOffset,  "rpm/kmh",   1, 0,  0, 500, 2
    TuaregSetupGear_4           = scalar, F32,      nextOffset,  "rpm/kmh",   1, 0,  0, 500, 2
    TuaregSetupGear_5           = scalar, F32,      nextOffset,  "rpm/kmh",   1, 0,  0, 500, 2

    TuaregSetupTPSAlpha         = scalar, F32,      nextOffset,  "",   1, 0,  0, 1, 2
    TuaregSetupMAPAlpha         = scalar, F32,      nextOffset,  "",   1, 0,  0, 1, 2

    TuaregSetupFuelPumpPriming  = scalar, U08,      nextOffset,  "s",  1, 0,  0, 10, 0

    TuaregSetupCrashSensHigh    = bits,   U08,      nextOffset, [0:0], $HIGHLOWLABELS
    TuaregSetupSideStandHigh    = bits,   U08,      lastOffset, [1:1], $HIGHLOWLABELS
    TuaregSetupRunOver          = bits,   U08,      lastOffset, [2:2], $ONOFFLABELS
    TuaregSetupSidesOver        = bits,   U08,      lastOffset, [3:3], $ONOFFLABELS
    TuaregSetupCrashOver        = bits,   U08,      lastOffset, [4:4], $ONOFFLABELS
    TuaregSetupQuietDash        = bits,   U08,      lastOffset, [5:5], $ONOFFLABELS
    ; size := 61


;--------------------------------------------------
; tachometer table
;--------------------------------------------------
page = 21

    TachTable_x  = array,  U16,   0,  [16],      "Rpm",      1.0,    0.0,   0, 10000,  0
    TachTable_y  = array,  U16,   32, [16],      "#",        1.0,    0.0,   0, 5000,   0


;--------------------------------------------------
; Syslog
;--------------------------------------------------
page = 22

    Syslog_00_ts        = scalar,   U32,        0,          "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_00_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_00_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_00_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_00_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_00_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_01_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_01_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_01_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_01_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_01_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_01_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_02_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_02_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_02_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_02_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_02_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_02_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_03_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_03_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_03_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_03_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_03_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_03_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_04_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_04_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_04_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_04_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_04_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_04_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_05_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_05_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_05_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_05_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_05_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_05_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_06_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_06_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_06_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_06_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_06_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_06_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_07_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_07_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_07_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_07_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_07_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_07_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_08_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_08_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_08_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_08_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_08_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_08_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_09_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_09_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_09_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_09_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_09_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_09_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_10_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_10_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_10_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_10_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_10_d         = bits,     U08,        nextOffset,        [7:7],    $ONOFFLABELS
    Syslog_10_dlog      = bits,     U08,        lastOffset,        [0:6],

    Syslog_11_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_11_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_11_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_11_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_11_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_11_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_12_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_12_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_12_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_12_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_12_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_12_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_13_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_13_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_13_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_13_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_13_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_13_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_14_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_14_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_14_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_14_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_14_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_14_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_15_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_15_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_15_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_15_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_15_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_15_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_16_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_16_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_16_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_16_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_16_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_16_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_17_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_17_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_17_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_17_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_17_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_17_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_18_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_18_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_18_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_18_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_18_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_18_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_19_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_19_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_19_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_19_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_19_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_19_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_20_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_20_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_20_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_20_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_20_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_20_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_21_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_21_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_21_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_21_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_21_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_21_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_22_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_22_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_22_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_22_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_22_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_22_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_23_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_23_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_23_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_23_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_23_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_23_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_24_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_24_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_24_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_24_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_24_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_24_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_25_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_25_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_25_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_25_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_25_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_25_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_26_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_26_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_26_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_26_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_26_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_26_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_27_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_27_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_27_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_27_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_27_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_27_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_28_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_28_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_28_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_28_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_28_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_28_dlog      = bits,     U08,        lastOffset,        [0:6]

    Syslog_29_ts        = scalar,   U32,        nextOffset,  "Timestamp",    1,  0, 0, 4000000,  0
    Syslog_29_type      = bits,     U08,        nextOffset,        [6:7],    $SYSLOGTYPELABELS
    Syslog_29_loc       = bits,     U08,        lastOffset,        [0:5],
    Syslog_29_src       = scalar,   U08,        nextOffset,  "Module-ID",    1,  0, 0, 255,      0
    Syslog_29_d         = bits,     U08,        nextOffset,        [7:7], $ONOFFLABELS
    Syslog_29_dlog      = bits,     U08,        lastOffset,        [0:6]
    ; size := 180 + 30


;--------------------------------------------------
; Faultlog
;--------------------------------------------------
page = 23

    Faultlog_count        = scalar,   U08,        0,   "Entries",    1,  0, 0, 255,      0

    Faultlog_00_loc       = scalar,   U08,        1,   "Location",    1,  0, 0, 255,      0
    Faultlog_00_src       = scalar,   U08,        2,  "Module-ID",    1,  0, 0, 255,      0

    Faultlog_01_loc       = scalar,   U08,        3,   "Location",    1,  0, 0, 255,      0
    Faultlog_01_src       = scalar,   U08,        4,  "Module-ID",    1,  0, 0, 255,      0

    Faultlog_02_loc       = scalar,   U08,        5,   "Location",    1,  0, 0, 255,      0
    Faultlog_02_src       = scalar,   U08,        6,  "Module-ID",    1,  0, 0, 255,      0
    ; size := 7


;-------------------------------------------------------------------------------

[ConstantsExtensions]

;service - activation parameters
defaultValue = serviceActivationOnTime, 2
defaultValue = serviceActivationOffTime, 6
defaultValue = serviceActivationEnd, 10

defaultValue = serviceTachAct1000, 1
defaultValue = serviceTachAct100, 2
defaultValue = serviceTachAct1, 30


;syslog - entries
controllerPriority= Syslog_00_ts
controllerPriority= Syslog_00_type
controllerPriority= Syslog_00_loc
controllerPriority= Syslog_00_src
controllerPriority= Syslog_00_d
controllerPriority= Syslog_00_dlog

controllerPriority= Syslog_01_ts
controllerPriority= Syslog_01_type
controllerPriority= Syslog_01_loc
controllerPriority= Syslog_01_src
controllerPriority= Syslog_01_d
controllerPriority= Syslog_01_dlog

controllerPriority= Syslog_02_ts
controllerPriority= Syslog_02_type
controllerPriority= Syslog_02_loc
controllerPriority= Syslog_02_src
controllerPriority= Syslog_02_d
controllerPriority= Syslog_02_dlog

controllerPriority= Syslog_03_ts
controllerPriority= Syslog_03_type
controllerPriority= Syslog_03_loc
controllerPriority= Syslog_03_src
controllerPriority= Syslog_03_d
controllerPriority= Syslog_03_dlog

controllerPriority= Syslog_04_ts
controllerPriority= Syslog_04_type
controllerPriority= Syslog_04_loc
controllerPriority= Syslog_04_src
controllerPriority= Syslog_04_d
controllerPriority= Syslog_04_dlog

controllerPriority= Syslog_05_ts
controllerPriority= Syslog_05_type
controllerPriority= Syslog_05_loc
controllerPriority= Syslog_05_src
controllerPriority= Syslog_05_d
controllerPriority= Syslog_05_dlog

controllerPriority= Syslog_06_ts
controllerPriority= Syslog_06_type
controllerPriority= Syslog_06_loc
controllerPriority= Syslog_06_src
controllerPriority= Syslog_06_d
controllerPriority= Syslog_06_dlog

controllerPriority= Syslog_07_ts
controllerPriority= Syslog_07_type
controllerPriority= Syslog_07_loc
controllerPriority= Syslog_07_src
controllerPriority= Syslog_07_d
controllerPriority= Syslog_07_dlog

controllerPriority= Syslog_08_ts
controllerPriority= Syslog_08_type
controllerPriority= Syslog_08_loc
controllerPriority= Syslog_08_src
controllerPriority= Syslog_08_d
controllerPriority= Syslog_08_dlog

controllerPriority= Syslog_09_ts
controllerPriority= Syslog_09_type
controllerPriority= Syslog_09_loc
controllerPriority= Syslog_09_src
controllerPriority= Syslog_09_d
controllerPriority= Syslog_09_dlog

controllerPriority= Syslog_10_ts
controllerPriority= Syslog_10_type
controllerPriority= Syslog_10_loc
controllerPriority= Syslog_10_src
controllerPriority= Syslog_10_d
controllerPriority= Syslog_10_dlog

controllerPriority= Syslog_11_ts
controllerPriority= Syslog_11_type
controllerPriority= Syslog_11_loc
controllerPriority= Syslog_11_src
controllerPriority= Syslog_11_d
controllerPriority= Syslog_11_dlog

controllerPriority= Syslog_12_ts
controllerPriority= Syslog_12_type
controllerPriority= Syslog_12_loc
controllerPriority= Syslog_12_src
controllerPriority= Syslog_12_d
controllerPriority= Syslog_12_dlog

controllerPriority= Syslog_13_ts
controllerPriority= Syslog_13_type
controllerPriority= Syslog_13_loc
controllerPriority= Syslog_13_src
controllerPriority= Syslog_13_d
controllerPriority= Syslog_13_dlog

controllerPriority= Syslog_14_ts
controllerPriority= Syslog_14_type
controllerPriority= Syslog_14_loc
controllerPriority= Syslog_14_src
controllerPriority= Syslog_14_d
controllerPriority= Syslog_14_dlog

controllerPriority= Syslog_15_ts
controllerPriority= Syslog_15_type
controllerPriority= Syslog_15_loc
controllerPriority= Syslog_15_src
controllerPriority= Syslog_15_d
controllerPriority= Syslog_15_dlog

controllerPriority= Syslog_16_ts
controllerPriority= Syslog_16_type
controllerPriority= Syslog_16_loc
controllerPriority= Syslog_16_src
controllerPriority= Syslog_16_d
controllerPriority= Syslog_16_dlog

controllerPriority= Syslog_17_ts
controllerPriority= Syslog_17_type
controllerPriority= Syslog_17_loc
controllerPriority= Syslog_17_src
controllerPriority= Syslog_17_d
controllerPriority= Syslog_17_dlog

controllerPriority= Syslog_18_ts
controllerPriority= Syslog_18_type
controllerPriority= Syslog_18_loc
controllerPriority= Syslog_18_src
controllerPriority= Syslog_18_d
controllerPriority= Syslog_18_dlog

controllerPriority= Syslog_19_ts
controllerPriority= Syslog_19_type
controllerPriority= Syslog_19_loc
controllerPriority= Syslog_19_src
controllerPriority= Syslog_19_d
controllerPriority= Syslog_19_dlog

controllerPriority= Syslog_20_ts
controllerPriority= Syslog_20_type
controllerPriority= Syslog_20_loc
controllerPriority= Syslog_20_src
controllerPriority= Syslog_20_d
controllerPriority= Syslog_20_dlog

controllerPriority= Syslog_21_ts
controllerPriority= Syslog_21_type
controllerPriority= Syslog_21_loc
controllerPriority= Syslog_21_src
controllerPriority= Syslog_21_d
controllerPriority= Syslog_21_dlog

controllerPriority= Syslog_22_ts
controllerPriority= Syslog_22_type
controllerPriority= Syslog_22_loc
controllerPriority= Syslog_22_src
controllerPriority= Syslog_22_d
controllerPriority= Syslog_22_dlog

controllerPriority= Syslog_23_ts
controllerPriority= Syslog_23_type
controllerPriority= Syslog_23_loc
controllerPriority= Syslog_23_src
controllerPriority= Syslog_23_d
controllerPriority= Syslog_23_dlog

controllerPriority= Syslog_24_ts
controllerPriority= Syslog_24_type
controllerPriority= Syslog_24_loc
controllerPriority= Syslog_24_src
controllerPriority= Syslog_24_d
controllerPriority= Syslog_24_dlog

controllerPriority= Syslog_25_ts
controllerPriority= Syslog_25_type
controllerPriority= Syslog_25_loc
controllerPriority= Syslog_25_src
controllerPriority= Syslog_25_d
controllerPriority= Syslog_25_dlog

controllerPriority= Syslog_26_ts
controllerPriority= Syslog_26_type
controllerPriority= Syslog_26_loc
controllerPriority= Syslog_26_src
controllerPriority= Syslog_26_d
controllerPriority= Syslog_26_dlog

controllerPriority= Syslog_27_ts
controllerPriority= Syslog_27_type
controllerPriority= Syslog_27_loc
controllerPriority= Syslog_27_src
controllerPriority= Syslog_27_d
controllerPriority= Syslog_27_dlog

controllerPriority= Syslog_28_ts
controllerPriority= Syslog_28_type
controllerPriority= Syslog_28_loc
controllerPriority= Syslog_28_src
controllerPriority= Syslog_28_d
controllerPriority= Syslog_28_dlog

controllerPriority= Syslog_29_ts
controllerPriority= Syslog_29_type
controllerPriority= Syslog_29_loc
controllerPriority= Syslog_29_src
controllerPriority= Syslog_29_d
controllerPriority= Syslog_29_dlog


;faultlog - entries
controllerPriority= Faultlog_count
controllerPriority= Faultlog_00_loc
controllerPriority= Faultlog_00_src
controllerPriority= Faultlog_01_loc
controllerPriority= Faultlog_01_src
controllerPriority= Faultlog_02_loc
controllerPriority= Faultlog_02_src




[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;  There are four special menu names, which when used append to the standard
   ;  menus of the same name instead of creating a new one.  The menu names
   ;  are "File", "Communications", "Tools" and "Help".
   ;
   ;----------------------------------------------------------------------------

menuDialog = main

menu = "&Settings"
    subMenu = decoder_setup, "Decoder Setup"
    subMenu = tuareg_setup, "Tuareg Setup"
    subMenu = sensor_calibration, "Sensor Calibration"
    subMenu = invCLT_Curve,  "CLT Table"
    subMenu = TachCurve,  "Tachometer"

;menu = "&Tuning"
;    subMenu = std_separator

menu = "&Ignition"
    subMenu = ignition_setup,   "Ignition Setup"
    subMenu = std_separator
    subMenu = ignAdvTable_TPS,  "Ignition Advance - TPS"
    subMenu = DwellCurve,  "Dwell"

menu = "&Fueling"
    subMenu = fueling_setup,   "Fueling Setup"
    subMenu = std_separator
    subMenu = VeTable_TPS,  "VE Table - TPS"
    subMenu = VeTable_MAP,  "VE Table - MAP"
    subMenu = std_separator
    subMenu = AfrTable_TPS,  "AFR Table - TPS"
    subMenu = AfrTable_MAP,  "AFR Table - MAP"
    subMenu = std_separator
    subMenu = ChargeTempTable,  "Charge Temperature"
    subMenu = std_separator
    subMenu = fueling_setup_ae_legacy, "legacy AE"
    subMenu = AccelCompCurveTPS,  "AE TPS"
    subMenu = AccelCompCurveMAP,  "AE MAP"
    subMenu = BaroCorrCurve,  "BARO"
    subMenu = std_separator
    subMenu = InjectorTimingCurve,  "Injector delay"
    subMenu = InjectorPhaseCurve,  "Injector phase"
    subMenu = std_separator
    subMenu = CrankingFuelCurve,  "Cranking Fuel"
    subMenu = WarmUpCompCurve,  "Warm up"

;menu = "Accessories"


menu = "&Maintenance"
    subMenu = config_permission, "Config Permissions"
    subMenu = std_separator
    subMenu = service, "Service"
    subMenu = service_vital_actors, "Service Tools - Vital Actors"
    subMenu = service_sec_actors, "Service Tools - Secondary Actors"
    subMenu = std_separator
    subMenu = syslog, "View Syslog"
    subMenu = faultlog, "View Fault Log"

;menu = "3D &Tuning Maps"
;    subMenu = std_separator


;------------------------------------------------------------------------------

[SettingContextHelp]
; constantName = "Help Text"
; tool tips tooltips
;Ensure all settings are defined as some MS2/BG words shipped with TS are not applicable.


[UserDefined]

; Enhanced TunerStudio dialogs can be defined here
; MegaTune will over look this section
; These dialogs will over-ride those in the UserDefined Section
; User defined are loaded first, then if one by the same name is defined here,
; it will replace the MegaTune definition

; dialog = name,   Title, Layout
;
; valid options for layout are xAxis, yAxis, border
; for an xAxis, each field added will be added from right to left
; A yAxis layout will add fields from top to bottom
; A border layout will expect an additional constraint to determine placement
; valid border constraints are north, South, East, West, Center
; all 5 do not need to be filled.

; The field name can be either a constant reference, or a reference to another
; dialog which will be added.
; dialogs can be nested and can be mixed with fields


;   sensor calib

dialog = iat_calib, "IAT", yAxis
    field = "IAT sensor rate", IATcalibM
    field = "IAT sensor offset", IATcalibN
    field = "IAT sensor minimum valid sensor readout", IATcalibMin
    field = "IAT sensor maximum valid sensor readout", IATcalibMax
    field = "IAT sample length", IATsampleLen

dialog = clt_calib, "CLT", yAxis
    field = "CLT sensor rate", CLTcalibM
    field = "CLT sensor offset", CLTcalibN
    field = "CLT sensor minimum valid sensor readout", CLTcalibMin
    field = "CLT sensor maximum valid sensor readout", CLTcalibMax
    field = "CLT sample length", CLTsampleLen

dialog = tps_calib, "TPS", yAxis
    field = "TPS sensor rate", TPScalibM
    field = "TPS sensor offset", TPScalibN
    field = "TPS sensor minimum valid sensor readout", TPScalibMin
    field = "TPS sensor maximum valid sensor readout", TPScalibMax
    field = "TPS sample length", TPSsampleLen

dialog = map_calib, "MAP", yAxis
    field = "MAP sensor rate", MAPcalibM
    field = "MAP sensor offset", MAPcalibN
    field = "MAP sensor minimum valid sensor readout", MAPcalibMin
    field = "MAP sensor maximum valid sensor readout", MAPcalibMax
    field = "MAP sample length", MAPsampleLen

dialog = baro_calib, "BARO", yAxis
    field = "BARO sensor rate", BAROcalibM
    field = "BARO sensor offset", BAROcalibN
    field = "BARO sensor minimum valid sensor readout", BAROcalibMin
    field = "BARO sensor maximum valid sensor readout", BAROcalibMax
    field = "BARO sample length", BAROsampleLen

dialog = o2_calib, "O2", yAxis
    field = "O2 sensor rate", O2calibM
    field = "O2 sensor offset", O2calibN
    field = "O2 sensor minimum valid sensor readout", O2calibMin
    field = "O2 sensor maximum valid sensor readout", O2calibMax
    field = "O2 sample length", O2sampleLen

dialog = vbat_calib, "VBAT", yAxis
    field = "VBAT sensor rate", VBATcalibM
    field = "VBAT sensor offset", VBATcalibN
    field = "VBAT sensor minimum valid sensor readout", VBATcalibMin
    field = "VBAT sensor maximum valid sensor readout", VBATcalibMax
    field = "VBAT sample length", VBATsampleLen

dialog = knock_calib, "KNOCK", yAxis
    field = "KNOCK sensor rate", KNOCKcalibM
    field = "KNOCK sensor offset", KNOCKcalibN
    field = "KNOCK sensor minimum valid sensor readout", KNOCKcalibMin
    field = "KNOCK sensor maximum valid sensor readout", KNOCKcalibMax
    field = "KNOCK sample length", KNOCKsampleLen

dialog = gear_calib, "GEAR", yAxis
    field = "GEAR sensor rate", GEARcalibM
    field = "GEAR sensor offset", GEARcalibN
    field = "GEAR sensor minimum valid sensor readout", GEARcalibMin
    field = "GEAR sensor maximum valid sensor readout", GEARcalibMax
    field = "GEAR sample length", GEARsampleLen


dialog = sensor_calibration, "Sensor Calibration"
    field = "Version", calibVersion
    panel = iat_calib
    panel = clt_calib
    panel = tps_calib
    panel = map_calib
    panel = baro_calib
    panel = o2_calib
    panel = vbat_calib
    panel = knock_calib
    panel = gear_calib


; decoder setup

dialog = decoder_crk, "Crank", yAxis

    field = "Crank Noise Filter", DecCrankNoiseFilter
    field = "Key Begin sensing", DecKeyBeginSensing
    field = "Key End sensing", DecKeyEndSensing
    field = "Sync Ratio min", DecSyncRatioMin
    field = "Sync Ratio max", DecSyncRatioMax

dialog = decoder_cam, "Cam", yAxis

    field = "Cam Noise Filter", DecCamNoiseFilter
    field = "Lobe Begin sensing", DecLobeBeginSensing
    field = "Lobe End sensing", DecLobeEndSensing
    field = "Cis Enable Position", DecCisEnablePos
    field = "Cis Disable Position", DecCisDisablePos
    field = "Cis triggered Phase", DecCisTriggeredPhase
    field = "Cis Min Angle", DecCisMinAngle
    field = "Cis Sync Threshold", DecCisSyncThres

dialog = decoder_setup, "Decoder Setup"

    field = "Version", DecoderVersion
    field = "Timeout", DecTimeout
    panel = decoder_crk
    panel = decoder_cam


;   Tuareg Setup

dialog = tuareg_setup_triggers, "Triggers", yAxis

    field = "Trigger advance B2", TuaregSetupCrkPosTbl_B2
    field = "Trigger advance B1", TuaregSetupCrkPosTbl_B1
    field = "Trigger advance A2", TuaregSetupCrkPosTbl_A2
    field = "Trigger advance A1", TuaregSetupCrkPosTbl_A1
    field = "Trigger advance D2", TuaregSetupCrkPosTbl_D2
    field = "Trigger advance D1", TuaregSetupCrkPosTbl_D1
    field = "Trigger advance C2", TuaregSetupCrkPosTbl_C2
    field = "Trigger advance C1", TuaregSetupCrkPosTbl_C1
    field = "Decoder delay by VR", TuaregSetupDecoderDelay


dialog = tuareg_setup_speed, "Ground Speed", yAxis

    field = "Ratio 1st gear", TuaregSetupGear_1
    field = "Ratio 2nd gear", TuaregSetupGear_2
    field = "Ratio 3rd gear", TuaregSetupGear_3
    field = "Ratio 4th gear", TuaregSetupGear_4
    field = "Ratio 5th gear", TuaregSetupGear_5


dialog = tuareg_setup_prot, "Protection", yAxis

    field = "Rev Limiter", TuaregSetupMaxRpm
    field = "Rev Limiter in Limp mode", TuaregSetupLimpMaxRpm
    field = "Overheat protection turn on temp", TuaregSetupOverheatThres
    field = "Override Run Switch", TuaregSetupRunOver
    field = "Crash sensor active on", TuaregSetupCrashSensHigh
    field = "Override Crash Sensor", TuaregSetupCrashOver
    field = "Sidestand sensor active on", TuaregSetupSideStandHigh
    field = "Override Sidestand Sensor", TuaregSetupSidesOver
    field = "Standby timeout", TuaregSetupStandbyTimeout

dialog = tuareg_setup_misc, "Misc", yAxis

    field = "quiet Dash", TuaregSetupQuietDash


dialog = tuareg_setup_startup, "startup", yAxis

    field = "Engine rpm to turn off cranking features", TuaregSetupCrankEndRpm
    field = "Fuel Pump priming duration", TuaregSetupFuelPumpPriming


dialog = tuareg_setup_filter, "filter parameters", yAxis

    field = "TPS filter coefficient", TuaregSetupTPSAlpha
    field = "MAP filter coefficient", TuaregSetupMAPAlpha


dialog = tuareg_setup, "Tuareg Setup"
    field = "Version", TuaregSetupVersion
    panel = tuareg_setup_speed
    panel = tuareg_setup_triggers
    panel = tuareg_setup_prot
    panel = tuareg_setup_startup
    panel = tuareg_setup_filter
    panel = tuareg_setup_misc


;   ignition Setup
dialog = ignition_setup_dyn, "Dynamic Mode", yAxis

    field = "Dynamic Ignition min rpm", IgnDynMinRpm
    field = "Dynamic Ignition base position", IgnDynBasePos
    field = "Dynamic Mode enabled", IgnFeatDynamic


dialog = ignition_setup_coldidle, "Cold Idle", yAxis

    field = "Cold Idle Cutoff rpm", IgnColdIdleCutoffRpm
    field = "Cold Idle Cutoff coolant temperature", IgnColdIdleCutoffClt
    field = "Cold Idle advance", IgnColdIdleIgnAdv
    field = "Cold Idle Dwell", IgnColdIdleDwell
    field = "Cold Idle controls enabled", IgnFeatColdIdle


dialog = ignition_setup_crank, "Cranking", yAxis

    field = "Cranking spark position", IgnCrankIgnPos
    field = "Cranking Dwell position", IgnCrankDwellPos
    field = "Cranking controls enabled", IgnFeatCranking


dialog = ignition_setup_seq, "Sequential Mode", yAxis

    field = "Sequential Mode enabled", IgnFeatSequential


dialog = ignition_setup_common, "Common", yAxis

    field = "Second Coil installed", IgnFeatSecondCoil
    field = "Spark Duration", IgnSparkDuration


dialog = ignition_setup, "Ignition Setup"
    field = "Version", IgnitionVersion
    panel = ignition_setup_crank
    panel = ignition_setup_coldidle
    panel = ignition_setup_dyn
    panel = ignition_setup_seq
    panel = ignition_setup_common


;------------------------------------------------------------------------------------------------
;   Fueling Setup
;------------------------------------------------------------------------------------------------


dialog = fueling_setup_ae_legacy_accel, "acceleration", yAxis

    field = "TPS rate for AE", FuelingSetupAccelCompThresTPS
    field = "MAP rate for AE", FuelingSetupAccelCompThresMAP

    field = "rpm based scaling threshold", FuelingSetupAccelCompScalingThresRpm
    field = "rpm based scaling end", FuelingSetupAccelCompScalingMaxRpm

    field = "AE duration", FuelingSetupAccelCompCyc
    field = "AE taper threshold", FuelingSetupAccelCompTaperThres
    field = "AE taper factor", FuelingSetupAccelCompTaperFactor

    field = "AE additional fuel for cold engine", FuelingSetupColdAccelPct


dialog = fueling_setup_ae_legacy_decel, "deceleration", yAxis

    field = "TPS rate for DeAE", FuelingSetupDecelCompThresTPS
    field = "MAP rate for DeAE", FuelingSetupDecelCompThresMAP
    field = "DeAE amount", FuelingSetupDecelCompM
    field = "DeAE duration", FuelingSetupDecelCompCyc


; legacy AE submenu main element
dialog = fueling_setup_ae_legacy, "legacy AE", yAxis

    field = "legacy AE", FuelingSetupFeatLegacyAE
    panel = fueling_setup_ae_legacy_accel
    panel = fueling_setup_ae_legacy_decel


;--

; load transient comp
dialog = fueling_setup_load_comp, "load transient compensation", yAxis

    field = "enabled", FuelingSetupFeatLoadComp


; injector settings
dialog = fueling_setup_inj, "Injectors", yAxis

    field = "Injector #1 flow rate", FuelingSetupInj1Rate
    field = "Injector #2 flow rate", FuelingSetupInj2Rate
    field = "Injector max duty cycle", FuelingSetupInjMaxDc

; ASE
dialog = fueling_setup_ase, "ASE", yAxis

    field = "Afer start enrichment enabled", FuelingSetupFeatASE
    field = "ASE amount", FuelingSetupAsCompPct
    field = "ASE duration", FuelingSetupAsCompCyc
    field = "ASE CLT cutoff", FuelingSetupAsCompThres

; Cranking
dialog = fueling_setup_cranking, "Cranking", yAxis

    field = "Dry Cranking enabled", FuelingSetupFeatDryCrank
    field = "Dry Cranking TPS threshold", FuelingSetupDryCrankTPSthrs


dialog = fueling_setup_spd, "Speed Density", yAxis

    field = "Speed Density min", FuelingSetupSPDmin
    field = "Speed Density max", FuelingSetupSPDmax


dialog = fueling_setup_seq, "Sequential Mode", yAxis

    field = "Seq Mode enabled", FuelingSetupFeatSeqMode

; WUE
dialog = fueling_setup_warmup, "WUE", yAxis

    field = "Warm up enrichment enabled", FuelingSetupFeatWUE

; BARO
dialog = fueling_setup_baro, "Baro", yAxis

    field = "Barometric correction enabled", FuelingSetupFeatBAROComp


dialog = fueling_setup_common, "Common", yAxis

    field = "Volume of each cylinder", FuelingSetupCylinderVolume
    field = "injection reference position", FuelingSetupInjRefPos

;---

; Fueling setup main dialog
dialog = fueling_setup, "Fueling Setup"

    field = "Version", FuelingSetupVersion
    panel = fueling_setup_common
    panel = fueling_setup_inj
    panel = fueling_setup_load_comp
    panel = fueling_setup_baro
    panel = fueling_setup_ase
    panel = fueling_setup_warmup
    panel = fueling_setup_seq
    panel = fueling_setup_spd
    panel = fueling_setup_cranking


;--------------------------------------------------------------

dialog = config_permission, "Config Permissions"
    commandButton = "Sensor Calibration", cmdCalibModPerm
    commandButton = "Decoder Config", cmdDecoderModPerm
    commandButton = "Ignition Config", cmdIgnitionModPerm
    commandButton = "Fueling Config", cmdFuelingModPerm
    commandButton = "Tuareg Setup", cmdTuaregSetupModPerm
    commandButton = "Config Burn", cmdConfigBurnPerm
    commandButton = "Fault Log", cmdFaultLogPerm
    commandButton = "Lock Config", cmdLockConfig


dialog = service, "Service"
    commandButton = "Reset ECU", cmdReset
    commandButton = "Fatal Error", cmdFatal
    commandButton = "Limp Mode", cmdLimp
    commandButton = "Clear Fault Log", cmdClearFaultLog
    commandButton = "Enter Service Mode", cmdServiceModeReq


;service tools - vital actors

dialog = service_fuel_pump_activation, "Fuel Pump", yAxis

    commandButton = "Activate", cmdServiceActivateFuelPump
    commandButton = "Deactivate", cmdServiceDeactivateFuelPump

dialog = service_injector1_activation, "Fuel Injector 1", yAxis

    commandButton = "Activate", cmdServiceActivateInjector1
    commandButton = "Deactivate", cmdServiceDeactivateInjector1

dialog = service_injector2_activation, "Fuel Injector 2", yAxis

    commandButton = "Activate", cmdServiceActivateInjector2
    commandButton = "Deactivate", cmdServiceDeactivateInjector2

dialog = service_coil1_activation, "Ignition Coil 1", yAxis

    commandButton = "Activate", cmdServiceActivateCoil1
    commandButton = "Deactivate", cmdServiceDeactivateCoil1

dialog = service_coil2_activation, "Ignition Coil 2", yAxis

    commandButton = "Activate", cmdServiceActivateCoil2
    commandButton = "Deactivate", cmdServiceDeactivateCoil2

dialog = service_tach_activation, "Tachometer", yAxis

    commandButton = "Activate", cmdServiceActivateTach
    commandButton = "Deactivate", cmdServiceDeactivateTach


dialog = service_vital_actors_activation, "Vital Actors", xAxis

    panel = service_fuel_pump_activation
    panel = service_injector1_activation
    panel = service_injector2_activation
    panel = service_coil1_activation
    panel = service_coil2_activation

dialog = service_sec_actors_activation, "Secondary Actors", xAxis

    panel = service_tach_activation


dialog = service_act_parameters, "Activation Parameters", xAxis

    field = "On-Time:", serviceActivationOnTime
    field = "Off-Time:", serviceActivationOffTime
    field = "Interval/On target:", serviceActivationEnd

dialog = service_tach_parameters, "Tachometer Parameters", xAxis

    field = "x1000:", serviceTachAct1000
    field = "x100:", serviceTachAct100
    field = "x1:", serviceTachAct1


dialog = service_vital_actors, "Service Tools - Vital Actors", yAxis

    panel = service_act_parameters
    panel = service_vital_actors_activation

dialog = service_sec_actors, "Service Tools - Secondary Actors", yAxis

    panel = service_tach_parameters
    panel = service_sec_actors_activation


;syslog

dialog = syslogentry_00, "00", xAxis

    displayOnlyField = "Timestamp", Syslog_00_ts
    displayOnlyField = "Type:", Syslog_00_type
    displayOnlyField = "Source:", Syslog_00_src
    displayOnlyField = "Location:", Syslog_00_loc

dialog = syslogentry_01, "01", xAxis

    displayOnlyField = "Timestamp", Syslog_01_ts
    displayOnlyField = "Type:", Syslog_01_type
    displayOnlyField = "Source:", Syslog_01_src
    displayOnlyField = "Location:", Syslog_01_loc

dialog = syslogentry_02, "02", xAxis

    displayOnlyField = "Timestamp", Syslog_02_ts
    displayOnlyField = "Type:", Syslog_02_type
    displayOnlyField = "Source:", Syslog_02_src
    displayOnlyField = "Location:", Syslog_02_loc

dialog = syslogentry_03, "03", xAxis

    displayOnlyField = "Timestamp", Syslog_03_ts
    displayOnlyField = "Type:", Syslog_03_type
    displayOnlyField = "Source:", Syslog_03_src
    displayOnlyField = "Location:", Syslog_03_loc

dialog = syslogentry_04, "04", xAxis

    displayOnlyField = "Timestamp", Syslog_04_ts
    displayOnlyField = "Type:", Syslog_04_type
    displayOnlyField = "Source:", Syslog_04_src
    displayOnlyField = "Location:", Syslog_04_loc

dialog = syslogentry_05, "05", xAxis

    displayOnlyField = "Timestamp", Syslog_05_ts
    displayOnlyField = "Type:", Syslog_05_type
    displayOnlyField = "Source:", Syslog_05_src
    displayOnlyField = "Location:", Syslog_05_loc

dialog = syslogentry_06, "06", xAxis

    displayOnlyField = "Timestamp", Syslog_06_ts
    displayOnlyField = "Type:", Syslog_06_type
    displayOnlyField = "Source:", Syslog_06_src
    displayOnlyField = "Location:", Syslog_06_loc

dialog = syslogentry_07, "07", xAxis

    displayOnlyField = "Timestamp", Syslog_07_ts
    displayOnlyField = "Type:", Syslog_07_type
    displayOnlyField = "Source:", Syslog_07_src
    displayOnlyField = "Location:", Syslog_07_loc

dialog = syslogentry_08, "08", xAxis

    displayOnlyField = "Timestamp", Syslog_08_ts
    displayOnlyField = "Type:", Syslog_08_type
    displayOnlyField = "Source:", Syslog_08_src
    displayOnlyField = "Location:", Syslog_08_loc

dialog = syslogentry_09, "09", xAxis

    displayOnlyField = "Timestamp", Syslog_09_ts
    displayOnlyField = "Type:", Syslog_09_type
    displayOnlyField = "Source:", Syslog_09_src
    displayOnlyField = "Location:", Syslog_09_loc


dialog = syslogentry_10, "10", xAxis

    displayOnlyField = "Timestamp", Syslog_10_ts
    displayOnlyField = "Type:", Syslog_10_type
    displayOnlyField = "Source:", Syslog_10_src
    displayOnlyField = "Location:", Syslog_10_loc

dialog = syslogentry_11, "11", xAxis

    displayOnlyField = "Timestamp", Syslog_11_ts
    displayOnlyField = "Type:", Syslog_11_type
    displayOnlyField = "Source:", Syslog_11_src
    displayOnlyField = "Location:", Syslog_11_loc

dialog = syslogentry_12, "12", xAxis

    displayOnlyField = "Timestamp", Syslog_12_ts
    displayOnlyField = "Type:", Syslog_12_type
    displayOnlyField = "Source:", Syslog_12_src
    displayOnlyField = "Location:", Syslog_12_loc

dialog = syslogentry_13, "13", xAxis

    displayOnlyField = "Timestamp", Syslog_13_ts
    displayOnlyField = "Type:", Syslog_13_type
    displayOnlyField = "Source:", Syslog_13_src
    displayOnlyField = "Location:", Syslog_13_loc

dialog = syslogentry_14, "14", xAxis

    displayOnlyField = "Timestamp", Syslog_14_ts
    displayOnlyField = "Type:", Syslog_14_type
    displayOnlyField = "Source:", Syslog_14_src
    displayOnlyField = "Location:", Syslog_14_loc

dialog = syslogentry_15, "15", xAxis

    displayOnlyField = "Timestamp", Syslog_15_ts
    displayOnlyField = "Type:", Syslog_15_type
    displayOnlyField = "Source:", Syslog_15_src
    displayOnlyField = "Location:", Syslog_15_loc

dialog = syslogentry_16, "16", xAxis

    displayOnlyField = "Timestamp", Syslog_16_ts
    displayOnlyField = "Type:", Syslog_16_type
    displayOnlyField = "Source:", Syslog_16_src
    displayOnlyField = "Location:", Syslog_16_loc

dialog = syslogentry_17, "17", xAxis

    displayOnlyField = "Timestamp", Syslog_17_ts
    displayOnlyField = "Type:", Syslog_17_type
    displayOnlyField = "Source:", Syslog_17_src
    displayOnlyField = "Location:", Syslog_17_loc

dialog = syslogentry_18, "18", xAxis

    displayOnlyField = "Timestamp", Syslog_18_ts
    displayOnlyField = "Type:", Syslog_18_type
    displayOnlyField = "Source:", Syslog_18_src
    displayOnlyField = "Location:", Syslog_18_loc

dialog = syslogentry_19, "19", xAxis

    displayOnlyField = "Timestamp", Syslog_19_ts
    displayOnlyField = "Type:", Syslog_19_type
    displayOnlyField = "Source:", Syslog_19_src
    displayOnlyField = "Location:", Syslog_19_loc

dialog = syslogentry_20, "20", xAxis

    displayOnlyField = "Timestamp", Syslog_20_ts
    displayOnlyField = "Type:", Syslog_20_type
    displayOnlyField = "Source:", Syslog_20_src
    displayOnlyField = "Location:", Syslog_20_loc

dialog = syslogentry_21, "21", xAxis

    displayOnlyField = "Timestamp", Syslog_21_ts
    displayOnlyField = "Type:", Syslog_21_type
    displayOnlyField = "Source:", Syslog_21_src
    displayOnlyField = "Location:", Syslog_21_loc

dialog = syslogentry_22, "22", xAxis

    displayOnlyField = "Timestamp", Syslog_22_ts
    displayOnlyField = "Type:", Syslog_22_type
    displayOnlyField = "Source:", Syslog_22_src
    displayOnlyField = "Location:", Syslog_22_loc

dialog = syslogentry_23, "23", xAxis

    displayOnlyField = "Timestamp", Syslog_23_ts
    displayOnlyField = "Type:", Syslog_23_type
    displayOnlyField = "Source:", Syslog_23_src
    displayOnlyField = "Location:", Syslog_23_loc

dialog = syslogentry_24, "24", xAxis

    displayOnlyField = "Timestamp", Syslog_24_ts
    displayOnlyField = "Type:", Syslog_24_type
    displayOnlyField = "Source:", Syslog_24_src
    displayOnlyField = "Location:", Syslog_24_loc

dialog = syslogentry_25, "25", xAxis

    displayOnlyField = "Timestamp", Syslog_25_ts
    displayOnlyField = "Type:", Syslog_25_type
    displayOnlyField = "Source:", Syslog_25_src
    displayOnlyField = "Location:", Syslog_25_loc

dialog = syslogentry_26, "26", xAxis

    displayOnlyField = "Timestamp", Syslog_26_ts
    displayOnlyField = "Type:", Syslog_26_type
    displayOnlyField = "Source:", Syslog_26_src
    displayOnlyField = "Location:", Syslog_26_loc

dialog = syslogentry_27, "27", xAxis

    displayOnlyField = "Timestamp", Syslog_27_ts
    displayOnlyField = "Type:", Syslog_27_type
    displayOnlyField = "Source:", Syslog_27_src
    displayOnlyField = "Location:", Syslog_27_loc

dialog = syslogentry_28, "28", xAxis

    displayOnlyField = "Timestamp", Syslog_28_ts
    displayOnlyField = "Type:", Syslog_28_type
    displayOnlyField = "Source:", Syslog_28_src
    displayOnlyField = "Location:", Syslog_28_loc

dialog = syslogentry_29, "29", xAxis

    displayOnlyField = "Timestamp", Syslog_29_ts
    displayOnlyField = "Type:", Syslog_29_type
    displayOnlyField = "Source:", Syslog_29_src
    displayOnlyField = "Location:", Syslog_29_loc


dialog = syslog, "", yAxis
    panel = syslogentry_00
    panel = syslogentry_01
    panel = syslogentry_02
    panel = syslogentry_03
    panel = syslogentry_04
    panel = syslogentry_05
    panel = syslogentry_06
    panel = syslogentry_07
    panel = syslogentry_08
    panel = syslogentry_09
    panel = syslogentry_10
    panel = syslogentry_11
    panel = syslogentry_12
    panel = syslogentry_13
    panel = syslogentry_14
    panel = syslogentry_15
    panel = syslogentry_16
    panel = syslogentry_17
    panel = syslogentry_18
    panel = syslogentry_19
    panel = syslogentry_20
    panel = syslogentry_21
    panel = syslogentry_22
    panel = syslogentry_23
    panel = syslogentry_24
    panel = syslogentry_25
    panel = syslogentry_26
    panel = syslogentry_27
    panel = syslogentry_28
    panel = syslogentry_29


;faultlog - entries

dialog = faultloghead, "00", xAxis

    displayOnlyField = "Entries:", Faultlog_count

dialog = faultlogentry_00, "00", xAxis

    displayOnlyField = "Source:", Faultlog_00_src
    displayOnlyField = "Location:", Faultlog_00_loc

dialog = faultlogentry_01, "01", xAxis

    displayOnlyField = "Source:", Faultlog_01_src
    displayOnlyField = "Location:", Faultlog_01_loc

dialog = faultlogentry_02, "02", xAxis

    displayOnlyField = "Source:", Faultlog_02_src
    displayOnlyField = "Location:", Faultlog_02_loc


dialog = faultlog, "", yAxis
    panel = faultloghead
    panel = faultlogentry_00
    panel = faultlogentry_01
    panel = faultlogentry_02



    ;----------------------------------------------------------------------------
   ; Indicators

   indicatorPanel = GeneralIndicators, 11


       ;             expr                   off-label       	on-label,       	off-bg, off-fg, on-bg,  on-fg
       indicator = { tStandby }, 		    "Running",  		"Standby",          white,  black,  yellow, black
       indicator = { tCranking }, 	        "Cranking",  		"Cranking",     	white,  black,  yellow, black
       indicator = { tRunInhibit },	        "Run allowed",     	"RUN inhibit",      green,  black,   red,    black
       indicator = { tLimpMode }, 		    "LIMP off",  		"LIMP mode",     	white,  black,  red,   	black
       indicator = { tServiceMode }, 		"Service",  		"Service mode",     white,  black,  yellow,     black
       indicator = { tCrashSensor }, 		"Crash",            "CRASH sensor",     white,  black,   red,    black
       indicator = { tRunSwitch }, 		    "Run switch",       "RUN switch",       white,  black,   red,    black
       indicator = { tSidestandSensor },    "Sidestand",        "Sidestand",        white,  black,   red,    black
       indicator = { tOverheat },           "Overheat",         "OVERHEAT",         white,  black,   red,    black
       indicator = { tRevLimiter }, 		"Rev limiter",      "REV limiter",     	white,  black,   yellow,    black
       indicator = { tMil },	            "mil",     	        "CHECK ENGINE",     white, black,   yellow, black
       indicator = { tFatalError }, 		"fatal",     		    "FATAL",    	    white, black,   red,    black


   indicatorPanel = SensorIndicators, 10

       ;             expr                   off-label       	on-label,       	off-bg, off-fg, on-bg,  on-fg
       indicator = { tO2SensorErr }, 		"O2 ok",     		"O2 fail",    	    white, black,   red,    black
       indicator = { tTpsSensorErr }, 		"TPS ok",     	    "TPS fail",  	    white, black,   red,    black
       indicator = { tIatSensorErr }, 		"IAT ok",    		"IAT fail",         white, black,   red,    black
       indicator = { tCltSensorErr }, 		"CLT ok",    		"CLT fail",    	    white, black,   red,    black
       indicator = { tVbatSensorErr }, 		"VBAT ok",   		"VBAT fail",        white, black,   red,    black
       indicator = { tKnockSensorErr }, 	"KNOCK ok",  		"KNOCK fail",       white, black,   red,    black
       indicator = { tBaroSensorErr }, 		"BARO ok",   		"BARO fail",        white, black,   red,    black
       indicator = { tGearSensorErr }, 		"GEAR ok",   		"GEAR fail",        white, black,   red,    black
       indicator = { tMapSensorErr }, 		"MAP ok",  		    "MAP fail",    	    white, black,   red,    black
       indicator = { tCiSensorErr }, 		"CAM ok",  		    "CAM fail",    	    white, black,   red,    black


   indicatorPanel = FuelingIndicators, 16

       ;             expr                       off-label       	    on-label,       	    off-bg, off-fg, on-bg,     on-fg
       indicator = { tFuelPump },	            "Fuel Pump",     	    "Fuel Pump",            white,  black,  yellow,    black
       indicator = { fuelWUE },	    "WUE off",               "WUE",                   white,  black,  yellow,    black
       indicator = { fuelASE },	"ASE off",               "ASE",                   white,  black,  yellow,    black
       indicator = { fuelSeqMode },	            "batch inj",            "sequential inj",       white,  black,  yellow,    black
       indicator = { fuelDcClip },	            "inj dc ok",            "clip inj dc",          white,  black,  red,    black
       indicator = { fuelValid },	            "invalid controls",     "controls valid",       red,    black,  white,     black


   indicatorPanel = IgnitionIndicators, 5

       ;             expr                   off-label       	        on-label,       	    off-bg, off-fg, on-bg,  on-fg
       indicator = { ignDynamic }, 			"static ignition",		    "dynamic ignition",     white, black,   yellow,  black
       indicator = { ignSeqMode },	        "batch ign",                "sequential ign",       white,  black,  yellow,    black
       indicator = { ignColdIdle }, 		"warm idle",   	            "cold idle",            white, black,   yellow,  black
       indicator = { ignAdvMap },	        "Adv from TPS",     	    "ADV from MAP",         white,  black,  yellow,    black
       indicator = { ignValid },	        "invalid controls",         "controls valid",       red,    black,  white,     black

   indicatorPanel = ConfigIndicators, 10

       ;             expr                   off-label       	    on-label,       	        off-bg, off-fg, on-bg,  on-fg
       indicator = { comCalModPerm }, 	    "Sensor Calib",		    "Sensor Calib", 	        white,	black, 	yellow,	black
       indicator = { comIgnModPerm }, 	    "Ignition Config",      "Ignition Config",          white,	black, 	yellow,	black
       indicator = { comFuelModPerm }, 	    "Fuel Config",          "Fuel Config",              white,	black, 	yellow,	black
       indicator = { comDecModPerm }, 	    "Decoder Config",       "Decoder Config", 	        white,	black, 	yellow,	black
       indicator = { comBurnPerm   }, 	    "Config Burn",          "Config Burn",              white,	black, 	yellow,	black
       indicator = { tDecoderConfigErr }, 	"Decoder config ok",    "Decoder config Error",     white, black,   red,    black
       indicator = { tIgnitionConfigErr },  "Ignition config ok",   "Ignition config fail",     white, black,   red,    black
       indicator = { tTuaregConfigErr }, 	"Tuareg config ok",   	"Tuareg config fail",       white, black,   red,    black
       indicator = { tFuelingConfigErr }, 	"Fueling config ok",    "Fueling config fail",      white, black,   red,    black
       indicator = { tSensorCalibErr }, 	"Sensor Calibration ok", "Sensor Calibration fail", white, black,   red,    black


    indicatorPanel = LogIndicators, 3

       ;             expr                   off-label       	on-label,       	off-bg, off-fg, on-bg,  on-fg
       indicator = { tSyslogUpdate },	    "Syslog",     	    "Syslog",           white, black,   yellow, black
       indicator = { tDatalogUpdate },	    "Datalog",     	    "Datalog",          white, black,   yellow, black
       indicator = { tHgspdLogUpdate },	    "Hspdlog",     	    "Hspdlog",          white, black,   yellow, black


;-------------------------------------------------------------------------------
; General help text

       help = helpGeneral, "Tuareg Repository"
        webHelp = "https://github.com/kanavkin/Tuareg_sw"
        text = "see github repo for current source code"

;-----------------------------------------------------------------------------

[ControllerCommands]
; commandName    = command1, command2, commandn...
; command in standard ini format, a command name can be assigned to 1 to n commands that will be executed in order.
;         This does not include any resultant protocol envelope data, only the response data itself.

; WARNING!! These commands bypass TunerStudio's normal memory synchronization. If these commands
; alter mapped settings (Constant) memory in the controller, TunerStudio will have an out of sync condition
; and may create error messages.
; It is expected that these commands would not typically alter any ram mapped to a Constant.

;   ASCII table: ascii -x
;
;   20      30 0    40 @    50 P    60 `    70 p
;   21 !    31 1    41 A    51 Q    61 a    71 q
;   22 "    32 2    42 B    52 R    62 b    72 r
;   23 #    33 3    43 C    53 S    63 c    73 s
;   24 $    34 4    44 D    54 T    64 d    74 t
;   25 %    35 5    45 E    55 U    65 e    75 u
;   26 &    36 6    46 F    56 V    66 f    76 v
;   27 '    37 7    47 G    57 W    67 g    77 w
;   28 (    38 8    48 H    58 X    68 h    78 x
;   29 )    39 9    49 I    59 Y    69 i    79 y
;   2A *    3A :    4A J    5A Z    6A j    7A z
;   2B +    3B ;    4B K    5B [    6B k    7B {
;   2C ,    3C <    4C L    5C \    6C l    7C |
;   2D -    3D =    4D M    5D ]    6D m    7D }
;   2E .    3E >    4E N    5E ^    6E n    7E ~
;   2F /    3F ?    4F O    5F _    6F o    7F DEL


cmdCalibModPerm     = "\x4A\x63\x61\x6c\x23"
cmdDecoderModPerm   = "\x4A\x64\x65\x63\x23"
cmdTuaregSetupModPerm= "\x4A\x74\x75\x61\x23"
cmdIgnitionModPerm  = "\x4A\x69\x67\x6e\x23"
cmdFuelingModPerm   = "\x4A\x66\x75\x65\x23"
cmdConfigBurnPerm   = "\x4A\x62\x72\x6E\x21"
cmdFaultLogPerm     = "\x4A\x66\x61\x75\x6C"
cmdLockConfig       = "\x4A\x6c\x6f\x63\x6b"

cmdReset            = "\x44\x72\x73"
cmdFatal            = "\x44\x66\x61"
cmdLimp             = "\x44\x6C\x69"

;clear fault log
cmdClearFaultLog   = "\x44\x66\x6C"

;service mode
cmdServiceModeReq   = "\x4D\xFF\xFF\x00\x00"

cmdServiceActivateFuelPump  = "\x4D\x01\$serviceActivationOnTime\$serviceActivationOffTime\$serviceActivationEnd"
cmdServiceDeactivateFuelPump  = "\x4D\x01\x00\x00\x00"

cmdServiceActivateInjector1 = "\x4D\x02\$serviceActivationOnTime\$serviceActivationOffTime\$serviceActivationEnd"
cmdServiceDeactivateInjector1 = "\x4D\x02\x00\x00\x00"

cmdServiceActivateInjector2 = "\x4D\x03\$serviceActivationOnTime\$serviceActivationOffTime\$serviceActivationEnd"
cmdServiceDeactivateInjector2 = "\x4D\x03\x00\x00\x00"

cmdServiceActivateCoil1     = "\x4D\x04\$serviceActivationOnTime\$serviceActivationOffTime\$serviceActivationEnd"
cmdServiceDeactivateCoil1     = "\x4D\x04\x00\x00\x00"

cmdServiceActivateCoil2     = "\x4D\x05\$serviceActivationOnTime\$serviceActivationOffTime\$serviceActivationEnd"
cmdServiceDeactivateCoil2     = "\x4D\x05\x00\x00\x00"

cmdServiceActivateTach     = "\x4D\x06\$serviceTachAct1000\$serviceTachAct100\$serviceTachAct1"
cmdServiceDeactivateTach     = "\x4D\x06\x00\x00\x00"

; -------------------------------------------------------------
; Help down here
[SettingContextHelp]


[CurveEditor]

; Ignition Dwell curve
curve = DwellCurve, "Dwell"

    columnLabel = "Rpm", "Dwell"
    xAxis       =  0, 9000, 10
    yAxis       =  1000, 12240, 12

    xBins       = ignDwell_x, rpm
    yBins       = ignDwell_y

    showTextValues  = true
    gauge           = tachometer
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }


; Acceleration compensation curve
curve = AccelCompCurveTPS, "AE TPS"

    columnLabel = "throttle rate", "AE"
    xAxis       =  30, 500, 15
    yAxis       =  0, 50000, 15

    xBins       = AccelCompTPS_x, TPSdot
    yBins       = AccelCompTPS_y

    showTextValues  = true
    gauge           = tpsDerivGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }

; Acceleration compensation curve
curve = AccelCompCurveMAP, "AE MAP"

    columnLabel = "MAP rate", "AE"
    xAxis       =  30, 500, 15
    yAxis       =  0, 50000, 15

    xBins       = AccelCompMAP_x, MAPdot
    yBins       = AccelCompMAP_y

    showTextValues  = true
    gauge           = mapDerivGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }


; Warm up compensation curve
curve = WarmUpCompCurve, "Warm Up"

    columnLabel = "Coolant", "Correction"
    xAxis       =  -20, 90, 11
    yAxis       =  0, 60, 6

    xBins       = WarmUpComp_x, CLT
    yBins       = WarmUpComp_y

    showTextValues  = true
    gauge           = afrGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }


; Injector timing curve
curve = InjectorTimingCurve, "Injector dead time"

    columnLabel = "System voltage", "dead time"
    xAxis       =  8.5, 15, 7
    yAxis       =  800, 2000, 25

    xBins       = InjDead_x, VBAT
    yBins       = InjDead_y

    showTextValues  = true
    gauge           = afrDiffGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }



; Injector phase curve
curve = InjectorPhaseCurve, "Injector phase"

    columnLabel = "Rpm", "advance bTDC"
    xAxis       =  0, 9000, 10
    yAxis       =  0, 500, 10

    xBins       = InjPhase_x, rpm
    yBins       = InjPhase_y

    showTextValues  = true
    gauge           = afrGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }


; Cranking fuel curve
curve = CrankingFuelCurve, "Cranking base fuel mass"

    columnLabel = "Coolant", "fuel mass"
    xAxis       =  -20, 80, 9
    yAxis       =  10000, 50000, 5

    xBins       = CrankFuel_x, CLT
    yBins       = CrankFuel_y

    showTextValues  = true
    gauge           = cltGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }

; CLT thermistor calibration
curve = invCLT_Curve, "CLT Characteristics"

    columnLabel = "raw value", "CLT"
    xAxis       =  0, 4096, 8
    yAxis       =  250, 400, 25

    xBins       = invCLT_x
    yBins       = invCLT_y

    showTextValues  = true
    gauge           = cltGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }


;  BARO correction
curve = BaroCorrCurve, "BARO Correction"

    columnLabel = "pressure", "correction"
    xAxis       =  200, 1200, 15
    yAxis       =  -30, 50, 16

    xBins       = BAROcorr_x, ambient_pres_hPa
    yBins       = BAROcorr_y

    showTextValues  = true
    gauge           = baroGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }


; Tachometer output curve
curve = TachCurve, "Tachometer output"

    columnLabel = "Engine Speed", "compare"
    xAxis       =  0, 10000, 19
    yAxis       =  0, 5000, 10

    xBins       = TachTable_x, rpm
    yBins       = TachTable_y

    showTextValues  = true
    ;gauge           = afrDiffGauge
    ;showXYDataPlot  = true, xAxisLogField, yAxisLogField, { expressionPosition }



[TableEditor]

; Ignition Advance Table TPS
table = ignAdvTable_TPS,    ignAdvMap_TPS,    "Ignition Advance vs. TPS", 4

    xBins = ignAdv_TPS_x, rpm
    yBins = ignAdv_TPS_y, TPS
    zBins = ignAdv_TPS_z

    gridHeight  = 3.0
    upDownLabel = "ADVANCED", "RETARDED"


; VeTable_TPS
table = VeTable_TPS,    VeMap_TPS,    "VE vs. TPS", 4

    xBins = fuelVE_TPS_x, rpm
    yBins = fuelVE_TPS_y, TPS
    zBins = fuelVE_TPS_z

    gridHeight  = 3.0
    upDownLabel = "IDLE", "WOT"


; VeTable_MAP
table = VeTable_MAP,    VeMap_MAP,    "VE vs. MAP", 4

    xBins = fuelVE_MAP_x, rpm
    yBins = fuelVE_MAP_y, MAP
    zBins = fuelVE_MAP_z

    gridHeight  = 3.0
    upDownLabel = "IDLE", "WOT"


; AfrTable_TPS
table = AfrTable_TPS,    AfrMap_TPS,    "AFR vs. TPS", 4

    xBins = fuelAFR_TPS_x, rpm
    yBins = fuelAFR_TPS_y, TPS
    zBins = fuelAFR_TPS_z

    gridHeight  = 3.0
    upDownLabel = "LEAN", "RICH"

; AfrTable_MAP
table = AfrTable_MAP,    AfrMap_MAP,    "AFR vs. MAP", 4

    xBins = fuelAFR_MAP_x, rpm
    yBins = fuelAFR_MAP_y, MAP
    zBins = fuelAFR_MAP_z

    gridHeight  = 3.0
    upDownLabel = "LEAN", "RICH"


; ChargeTempTable
table = ChargeTempTable,    ChargeTemp,    "charge temp", 4

    xBins = ChargeTemp_x, IAT
    yBins = ChargeTemp_y, CLT
    zBins = ChargeTemp_z

    gridHeight  = 3.0
    upDownLabel = "COLD", "HOT"

;-------------------------------------------------------------------------------

[GaugeConfigurations]

   ;-------------------------------------------------------------------------------
   ;  Notes on some of the gauges.
   ;
   ;  The accelEnrichGauge is now a composite of both acceleration enrichment
   ;  and deceleration enleanment numbers.  See the definition of the variable
   ;  accDecEnrich in the OutputChannels section.
   ;
   ;-------------------------------------------------------------------------------
   ; Define a gauge's characteristics here, then go to a specific layout
   ; block (Tuning or FrontPage) and use the name you've defined here to
   ; display that gauge in a particular position.
   ;
   ; Name  = Case-sensitive, user-defined name for this gauge configuration.
   ; Var   = Case-sensitive name of variable to be displayed, see the
   ;         OutputChannels block in this file for possible values.
   ; Title = Title displayed at the top of the gauge.
   ; Units = Units displayed below value on gauge.
   ; Lo    = Lower scale limit of gauge.
   ; Hi    = Upper scale limit of gauge.
   ; LoD   = Lower limit at which danger color is used for gauge background.
   ; LoW   = Lower limit at which warning color is used.
   ; HiW   = Upper limit at which warning color is used.
   ; HiD   = Upper limit at which danger color is used.
   ; vd    = Decimal places in displayed value
   ; ld    = Label decimal places for display of Lo and Hi, above.

   ;Name               Var            Title                 Units     Lo     Hi     LoD    LoW   HiW   HiD vd ld

    tachometer      = rpm,          "Crank Speed",          "rpm",          0,  10000,    -1,   -1,  8000, 9000, 0, 0
    tachDerivGauge = RPMdot,      "d/dt Crank",            "rpm/s",        -1000,  1000,    -800,   -500,  500, 800, 0, 0

    tpsGauge        = TPS,          "Throttle",             "deg",          0,      100,     -1,     1,   90,  100, 1, 1
    tpsDerivGauge   = TPSdot,       "d/dt TPS",             "deg/s",        -500,  500,    -800,   -700,  700, 800, 0, 0
    mapDerivGauge   = MAPdot,       "d/dt MAP",             "kPa/s",        -500,  500,    -800,   -700,  700, 800, 0, 0

    mapGauge        = MAP,          "MAP",                  "kPa",          0,      120,    0,      20,  105,  110, 1, 1
    baroGauge       = BARO,         "ambient pres",         "kPa",          70,     120,    80,     90,  110,  115, 1, 1
    cltGauge        = CLT,          "Coolant",              "°C",           -40,    120,    -15,     0,   95,  105, 1, 1
    iatGauge        = IAT,          "Intake Air",           "°C",           -40,    50,    -15,     0,   40,  45, 1, 1
    afrGauge        = AFR,          "AFR",    			    "",             9,      20,     10,    11,   16,   17, 2, 2
    voltMeter       = VBAT,      "Battery Voltage",      "V",            0,      15,      8,    11,   15,   16, 2, 2
    knockGauge      = KNOCK,  "Knock level",          "#",            0,      15,      8,    11,   15,   16, 2, 2

    advanceGauge    = advance,      "Spark Advance",        "°BTDC",        60, -5,      0,     0,    45,    50, 0, 0
    dwellGauge      = dwell,        "dwell",                "us",           0,  8000,      0,     0,    15,    20, 0, 0

    VEgauge         = VE,           "VE",                   "%",            0,      120,     -1,   10,   100,  110, 1, 1
    fuelMassTgtGauge = TargetfuelMass,     "fuel target",            "ug",            0,     55000,     -1,   10,   50000,  50000, 0, 0
    fuelMassBaseGauge = BasefuelMass,     "base fuel",            "ug",            0,     55000,     -1,   10,   50000,  50000, 0, 0
    fuelMassCorrGauge = FuelMassCorr_pct,     "fuel corrections",            "%",            -200,     300,     -100,   -50,   50,  100, 0, 0
    afrTgtGauge     = AFRtgt,       "AFR target",           "",             9,    20,     10,    11,   16,   17, 2, 2


    injDcTgtGauge   = injDcTgt,     "injector dc target",   "%",            0,      120,     -1,   -1,   80,  90, 0, 0
    inj1IvGauge     = inj1Iv,       "injector #1",          "us",           0,      20000,     500,   1000,   15000,  18000, 0, 0
    inj2IvGauge     = inj2Iv,       "injector #2",          "us",           0,      20000,     500,   1000,   15000,  18000, 0, 0

    gearGauge       = GEAR,         "GEAR",                 "",             0,      6,          -1,   -1,   6,      6, 0, 0
    speedGauge      = ground_speed, "speed",                "km/h",         0,      220,        -1,   -1,   220,  220, 1, 1

    afrDiffGauge    = AFR_diff,     "AFR diff",    	        "",             -10,    10,     -6,    -3,   3,   6, 2, 2

    RunTimeGauge    = EngineRunTime,     "Run time",    	"",             0,    1000000,     -1,    -2,   30000000,   100000000, 0, 0


;-------------------------------------------------------------------------------

[FrontPage]


   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4  5
   ;    6  7  8  9  10

   gauge1 = tachometer
   gauge2 = tpsGauge
   gauge3 = mapGauge
   gauge4 = iatGauge
   gauge5 = cltGauge

   gauge6 = advanceGauge
   gauge7 = VEgauge
   gauge8 = afrGauge
   gauge9 = afrDiffGauge
   gauge10 = voltMeter


   ;----------------------------------------------------------------------------
   ; Indicators
   ;
   ;     green -> functional precondition present
   ;     red -> functional precondition not present
   ;     yellow -> function activated
   ;
   ;             expr                   off-label       	on-label,       	off-bg, off-fg, on-bg,  on-fg
   indicator = { comCalModPerm }, 	    "Sensor Calib ro",		"Sensor Calib rw", 	white,	black, 	yellow,	black
   indicator = { comIgnModPerm }, 	    "Ignition Cfg ro",  "Ignition Cfg rw",  white,	black, 	yellow,	black
   indicator = { comFuelModPerm }, 	    "Fuel Cfg ro",      "Fuel Cfg rw",      white,	black, 	yellow,	black
   indicator = { comDecModPerm }, 	    "Decoder Cfg ro",   "Decoder Cfg rw", 	white,	black, 	yellow,	black
   indicator = { comTsetupPerm }, 	    "Tuareg Cfg ro",    "Tuareg Cfg rw",    white,	black, 	yellow,	black
   indicator = { comBurnPerm   }, 	    "no Cfg Burn",      "Cfg Burn on",      white,	black, 	yellow,	black


   indicator = { ignDynamic }, 			"i.static",		    "i.dynamic",        white, black,   yellow,  black
   indicator = { ignValid }, 			"i.ctrls invalid",	"i.ctrls valid",    red,    black,  green,  black
   indicator = { ignSeqMode }, 			"i.batch",		    "i.sequential",     white, black,   yellow,  black
   indicator = { ignColdIdle }, 		"i.cold idle off",  "i.cold idle on",   white, black,   yellow,  black
   indicator = { ignAdvMap }, 		    "i.adv TPS",   	    "i.adv MAP",        white, black,   yellow,  black

   indicator = { tRunInhibit },	        "Run allowed",     	"RUN inhibit",      green, black,   red,    black
   indicator = { tCrashSensor }, 		"no Crash",         "CRASH",            green, black,   red,    black
   indicator = { tRunSwitch }, 		    "Run switch on",       "RUN switch off",   green, black,   red,    black
   indicator = { tSidestandSensor },    "no Sidestand",        "SIDESTAND",        green, black,   red,    black
   indicator = { tOverheat },           "no Overheat",         "OVERHEAT",         green, black,   red,    black

   indicator = { tStandby }, 		    "no Standby",  		"Standby",          white,  black,  yellow, black
   indicator = { tServiceMode }, 		"Service off",  		"Service mode",     white,  black,  yellow, black
   indicator = { tLimpMode }, 		    "Limp off",  		    "LIMP mode",     	white,  black,  red,   	black
   indicator = { tRevLimiter }, 		"Rev limiter off",      "REV limiter",     	white,  black,  red,   	black
   indicator = { tCranking }, 	        "not Cranking",  		"Cranking",     	white,  black,  yellow, black

   indicator = { fuelValid }, 	        "f.ctrls invalid",  "f.ctrls valid",    red,    black,  green, black
   indicator = { fuelSeqMode }, 	    "f.batch",          "f.sequential",   	white,  black,  yellow, black
   indicator = { fuelDcClip }, 	        "f.DC ok",          "f.DC clip",   	    white,  black,  red,    black
   indicator = { fuelDryCrank }, 	    "dry Cranking off",     "dry Cranking",   	white,  black,  yellow, black

   indicator = { tFuelPump },	        "Fuel Pump off",     	"Fuel Pump",        white, black,   yellow, black
   indicator = { tMil },	            "mil off",     	        "MIL",              white, black,   yellow, black

   indicator = { tSyslogUpdate },	    "Syslog",     	    "Syslog",           white, black,   yellow, black
   indicator = { tDatalogUpdate },	    "Datalog",     	    "Datalog",          white, black,   yellow, black
   indicator = { tHgspdLogUpdate },	    "Hspdlog",     	    "Hspdlog",          white, black,   yellow, black

   indicator = { tFatalError }, 		"no Fatal",         "FATAL",    	    white, black,   red,    black

   indicator = { tO2SensorErr }, 		"O2 ok",     		"O2 fail",    	    white, black,   red,    black
   indicator = { tTpsSensorErr }, 		"TPS ok",     	    "TPS fail",  	    white, black,   red,    black
   indicator = { tIatSensorErr }, 		"IAT ok",    		"IAT fail",         white, black,   red,    black
   indicator = { tCltSensorErr }, 		"CLT ok",    		"CLT fail",    	    white, black,   red,    black
   indicator = { tVbatSensorErr }, 		"VBAT ok",   		"VBAT fail",        white, black,   red,    black
   indicator = { tKnockSensorErr }, 	"KNOCK ok",  		"KNOCK fail",       white, black,   red,    black
   indicator = { tBaroSensorErr }, 		"BARO ok",   		"BARO fail",        white, black,   red,    black
   indicator = { tGearSensorErr }, 		"GEAR ok",   		"GEAR fail",        white, black,   red,    black
   indicator = { tMapSensorErr }, 		"MAP ok",  		    "MAP fail",    	    white, black,   red,    black
   indicator = { tCiSensorErr }, 		"CAM ok",  		    "CAM fail",    	    white, black,   red,    black

   indicator = { tDecoderConfigErr }, 	"Decoder Cfg ok",  		"Decoder Cfg fail",       white, black,   red,    black
   indicator = { tIgnitionConfigErr },  "Ignition Cfg ok",   		"Ignition Cfg fail",        white, black,   red,    black
   indicator = { tTuaregConfigErr }, 	"Tuareg Cfg ok",   		"Tuareg Cfg fail",        white, black,   red,    black
   indicator = { tFuelingConfigErr }, 	"Fueling Cfg ok",  		    "Fueling Cfg fail",    	    white, black,   red,    black
   indicator = { tSensorCalibErr }, 	"Sensor Calib ok",  		    "Sensor Calib fail",    	    white, black,   red,    black


;-------------------------------------------------------------------------------


[RunTime]


;-------------------------------------------------------------------------------

[Tuning]

   font            = "Courier", 14
   spotDepth       =   2 ; 0 = no indicators, 1 = Z only, 2 = XYZ indicators.
   cursorDepth     =   2 ; Same as spot depth.

   ; The four radio buttons on the tuning screen select a "page" of six
   ; gauges.  The gauge numbering is the same as the front page, across
   ; then down.
   ;             1  2
   ;             3  4
   ;             5  6
   ;
   ; gaugeColumns allows you to hide or show gauges in column 2 (i.e.,
   ; gauges 2, 4 and 6).

   gaugeColumns = 2 ; Only 1 or 2 are valid.

   ;----------------------------------------------------------------------------
   ; Notes on tuning screen gauges:
   ;   pageButtons = Labels for radio buttons at bottom of tuning dialog.
   ;
   ;   Gauge 2 previously switched automatically to be tpsGauge when alpha-n
   ;   was enabled, but you need to do it manually now.
   ;----------------------------------------------------------------------------
   ;              Page 1            Page 2             Page 3            Page 4
   pageButtons  = "&EGO",           "&WUE",            "PW&1",           "PW&2"
   gauge1       = tachometer,       tachometer,        tachometer,       tachometer
   gauge2       = mapGauge,         mapGauge,          mapGauge,         mapGauge
   gauge3       = egoGauge,         egoGauge,          egoGauge,         egoGauge
   gauge4       = egoCorrGauge,     warmupEnrichGauge, pulseWidthGauge,  pulseWidthGauge
   gauge5       = veBucketGauge,    veBucketGauge,     veBucketGauge,    veBucketGauge
   gauge6       = accelEnrichGauge, accelEnrichGauge,  dutyCycleGauge,   dutyCycleGauge

;-------------------------------------------------------------------------------

[OutputChannels]

; The number of bytes MegaTune or TunerStudio should expect as a result
   ; of sending the "A" command to Tuareg is determined
   ; by the value of ochBlockSize, so be very careful when
   ; you change it.

    deadValue        = { 0 }
    ochGetCommand    = "A"
    ochBlockSize     =  125


    secl                = scalar,  U08,     0, "sec",    1.000, 0.000

  ; tuareg bits
    tRunInhibit         = bits,    U32,    nextOffset, [0:0]
    tCrashSensor        = bits,    U32,    lastOffset, [1:1]
    tRunSwitch          = bits,    U32,    lastOffset, [2:2]
    tSidestandSensor    = bits,    U32,    lastOffset, [3:3]
    tOverheat           = bits,    U32,    lastOffset, [4:4]
    tServiceMode        = bits,    U32,    lastOffset, [5:5]
    tLimpMode           = bits,    U32,    lastOffset, [6:6]
    tRevLimiter         = bits,    U32,    lastOffset, [7:7]
    tStandby            = bits,    U32,    lastOffset, [8:8]
    tCranking           = bits,    U32,    lastOffset, [9:9]
    tFuelPump           = bits,    U32,    lastOffset, [10:10]
    tMil                = bits,    U32,    lastOffset, [11:11]
    tSyslogUpdate       = bits,    U32,    lastOffset, [12:12]
    tDatalogUpdate      = bits,    U32,    lastOffset, [13:13]
    tHgspdLogUpdate     = bits,    U32,    lastOffset, [14:14]
    tFatalError         = bits,    U32,    lastOffset, [15:15]
    tDecoderConfigErr   = bits,    U32,    lastOffset, [16:16]
    tIgnitionConfigErr  = bits,    U32,    lastOffset, [17:17]
    tTuaregConfigErr    = bits,    U32,    lastOffset, [18:18]
    tFuelingConfigErr   = bits,    U32,    lastOffset, [19:19]
    tSensorCalibErr     = bits,    U32,    lastOffset, [20:20]
    tO2SensorErr        = bits,    U32,    lastOffset, [21:21]
    tTpsSensorErr       = bits,    U32,    lastOffset, [22:22]
    tIatSensorErr       = bits,    U32,    lastOffset, [23:23]
    tCltSensorErr       = bits,    U32,    lastOffset, [24:24]
    tVbatSensorErr      = bits,    U32,    lastOffset, [25:25]
    tKnockSensorErr     = bits,    U32,    lastOffset, [26:26]
    tBaroSensorErr      = bits,    U32,    lastOffset, [27:27]
    tGearSensorErr      = bits,    U32,    lastOffset, [28:28]
    tMapSensorErr       = bits,    U32,    lastOffset, [29:29]
    tCiSensorErr        = bits,    U32,    lastOffset, [30:30]

    ;comm
    comCalModPerm   = bits,    U08,    nextOffset, [0:0]
    comIgnModPerm   = bits,    U08,    lastOffset, [1:1]
    comFuelModPerm  = bits,    U08,    lastOffset, [2:2]
    comDecModPerm   = bits,    U08,    lastOffset, [3:3]
    comTsetupPerm   = bits,    U08,    lastOffset, [4:4]
    comBurnPerm     = bits,    U08,    lastOffset, [5:5]
    comFaultLogPerm = bits,    U08,    lastOffset, [6:6]

    rpm             = scalar,   U16,    nextOffset, "rpm",    1.000, 0.000
    RPMdot         = scalar,   F32,    nextOffset, "rpm/s",  1.000, 0.000

    MAP             = scalar,   F32,    nextOffset, "kpa",    1.000, 0.000
    MAPdot          = scalar,   F32,    nextOffset, "kpa",    1.000, 0.000
    BARO            = scalar,   F32,    nextOffset, "kpa",      1.000, 0.000
    TPS             = scalar,   F32,    nextOffset, "deg",      1.000, 0.000
    TPSdot          = scalar,   F32,    nextOffset, "deg/s",    1.000, 0.000
    IAT             = scalar,   F32,    nextOffset, "C",    1.000, -273.15
    CLT             = scalar,   F32,    nextOffset, "C",    1.000, -273.15
    VBAT            = scalar,   F32,    nextOffset, "V",      1.000, 0.000
    AFR             = scalar,   F32,    nextOffset, "O2",     1.000, 0.000
    KNOCK     = scalar,   F32,    nextOffset, "Knock",     1.000, 0.000
    IVT             = scalar,   F32,    nextOffset, "C",    1.000, -273.15

    GEAR            = scalar,   U08,    nextOffset, "gear",    1.000, 0.000
    ground_speed    = scalar,   U08,    nextOffset, "km/h",    1.000, 0.000
    EngineRunTime   = scalar,   U32,    nextOffset, "#",  1.000, 0.000

    ;ignition
    ignValid         = bits,    U08,    nextOffset, [0:0]
    ignDynamic       = bits,    U08,    lastOffset, [1:1]
    ignSeqMode       = bits,    U08,    lastOffset, [2:2]
    ignColdIdle      = bits,    U08,    lastOffset, [3:3]
    ignAdvMap        = bits,    U08,    lastOffset, [4:4]

    advance         = scalar,   U16,    nextOffset, "deg",    1.000, 0.000
    dwell	        = scalar,   U16,    nextOffset, "us",     1.000, 0.00

    ;fueling
    fuelValid               = bits,    U16,    nextOffset, [0:0]
    fuelMAPnTPS             = bits,    U16,    lastOffset, [1:1]
    fuelAfrFallback         = bits,    U16,    lastOffset, [2:2]
    fuelInjBeginValid       = bits,    U16,    lastOffset, [3:3]
    fuelDryCrank            = bits,    U16,    lastOffset, [4:4]
    fuelSeqMode             = bits,    U16,    lastOffset, [5:5]
    fuelDcClip              = bits,    U16,    lastOffset, [6:6]
    fuelWUE                 = bits,    U16,    lastOffset, [7:7]
    fuelASE                 = bits,    U16,    lastOffset, [8:8]
    fuelBAROcorr            = bits,    U16,    lastOffset, [9:9]
    fuelLegacyAE            = bits,    U16,    lastOffset, [10:10]
    fuelLegacyAEtrigMAPacc     = bits,    U16,    lastOffset, [11:11]
    fuelLegacyAEtrigMAPdec     = bits,    U16,    lastOffset, [12:12]
    fuelLegacyAEtrigTPSacc     = bits,    U16,    lastOffset, [13:13]
    fuelLegacyAEtrigTPSdec     = bits,    U16,    lastOffset, [14:14]
    fuelLoadTransientComp   = bits,    U16,    lastOffset, [15:15]

    VE              = scalar,   F32,    nextOffset, "%",  1.000, 0.000
    AFRtgt          = scalar,   F32,    nextOffset, "AFR",  1.000, 0.000
    chargeTemp      = scalar,   F32,    nextOffset, "C",    1.000, -273.15
    airRate         = scalar,   F32,    nextOffset, "g/s",  1.000, 0.000

    BasefuelMass    = scalar,   F32,    nextOffset, "ug",  1.000, 0.000
    TargetfuelMass  = scalar,   F32,    nextOffset, "ug",  1.000, 0.000
    CmdfuelMass     = scalar,   F32,    nextOffset, "ug",  1.000, 0.000
    WallfuelMass    = scalar,   F32,    nextOffset, "ug",  1.000, 0.000


    inj1Iv          = scalar,   U32,    nextOffset, "us",  1.000, 0.000
    inj2Iv          = scalar,   U32,    nextOffset, "us",  1.000, 0.000
    injDelay        = scalar,   U32,    nextOffset, "us",  1.000, 0.000
    injDcTgt        = scalar,   F32,    nextOffset, "%",  1.000, 0.000

    fuelRate       = scalar,   F32,    nextOffset, "g/s",  1.000, 0.000
    fuelEff        = scalar,   F32,    nextOffset, "m/g",  1.000, 0.000

    ;size = 125


    time                    = { timeNow } ; "timeNow" is a parameterless built-in function.
    seconds                 = { secl };

    intake_vac              = { BARO - MAP }
    ambient_pres_hPa        = { BARO * 10 }
    AFR_diff                = { AFRtgt - AFR }
    FuelMassCorr_pct        = { (100 * TargetfuelMass / BasefuelMass) - 100 }
    FuelMassWallCorr_pct    = { (100 * CmdfuelMass / TargetfuelMass) - 100 }
    FuelMassAbsCorr_pct     = { (100 * CmdfuelMass / BasefuelMass) - 100 }

    FuelConsumpt_gph        = { 3600 * fuelRate }

    ;fuel 740 g/l m= V/r
    ;Eff := s / m ::= s * r/V
    ;FuelEff_kmpl        = { fuelEff / 740 }

    resAFR                  = { airRate / fuelRate }

    resVE_pct    =   { (VE * AFR) / AFRtgt }

    ;reqKorr_pct    =   { (100 * AFR) / AFRtgt }
    reqKorr_pct    =   { (100 * AFR * TargetfuelMass) / (AFRtgt * BasefuelMass) }
    reqKorrAbs_pct    =   { (100 * AFR * CmdfuelMass) / (AFRtgt * BasefuelMass) }
    reqKorrWall_pct    =   { (100 * AFR * CmdfuelMass) / (AFRtgt * TargetfuelMass) }





;-------------------------------------------------------------------------------

[Datalog]
   ; Full datalog.
   ;
   ; Default user-defined log emulates the full datalog.
   ;
   ; The entries are saved in the datalog file in the order in
   ; which they appear in the list below.
   ;
   ;   Channel - Case sensitive name of output channel to be logged.
   ;   Label   - String written to header line of log.  Be careful
   ;             about changing these, as programs like MSLVV and
   ;             MSTweak key off specific column names.
   ;   Type    - Data type of output, converted before writing.
   ;   Format  - C-style output format of data.
   ;
   ;       Channel          Label                   Type    Format
   ;       --------------   ----------              -----   ------

    entry = time,                   "Time",                             float,  "%.3f"

   ; tuareg
    entry = tRunInhibit,            "Run Inhibit active",               int,  "activeInactive"
    entry = tCrashSensor,           "Crash Sensor active",              int,  "activeInactive"
    entry = tRunSwitch,             "Run Switch active",                int,  "activeInactive"
    entry = tSidestandSensor,       "Sidestand Sensor active",          int,  "activeInactive"
    entry = tOverheat,              "Overheating detected",             int,  "activeInactive"
    entry = tServiceMode,           "Service Mode active",              int,  "activeInactive"
    entry = tLimpMode,              "Limp Mode active",                 int,  "activeInactive"
    entry = tRevLimiter,            "Rev limiter active",               int,  "activeInactive"
    entry = tStandby,               "Standby",                          int,  "activeInactive"
    entry = tCranking,              "Cranking detected",                int,  "activeInactive"
    entry = tFuelPump,              "Fuel Pump active",                 int,  "activeInactive"
    entry = tMil,                   "User lamp active",                 int,  "activeInactive"
    entry = tSyslogUpdate,          "Syslog update",                    int,  "activeInactive"
    entry = tDatalogUpdate,         "Datalog update",                   int,  "activeInactive"
    entry = tHgspdLogUpdate,        "Highspeedlog update",              int,  "activeInactive"
    entry = tFatalError,            "Fatal Error present",              int,  "activeInactive"
    entry = tDecoderConfigErr,      "Decoder Config Error present",     int,  "activeInactive"
    entry = tIgnitionConfigErr,     "Ignition Config Error present",    int,  "activeInactive"
    entry = tTuaregConfigErr,       "Tuareg Config Error present",      int,  "activeInactive"
    entry = tFuelingConfigErr,      "Fueling Config Error present",     int,  "activeInactive"
    entry = tSensorCalibErr,        "Sensor Calib Error present",       int,  "activeInactive"
    entry = tO2SensorErr,           "O2 Sensor Error present",          int,  "activeInactive"
    entry = tTpsSensorErr,          "TPS Sensor Error present",         int,  "activeInactive"
    entry = tIatSensorErr,          "IAT Sensor Error present",         int,  "activeInactive"
    entry = tCltSensorErr,          "CLT Sensor Error present",         int,  "activeInactive"
    entry = tVbatSensorErr,         "VBAT Sensor Error present",        int,  "activeInactive"
    entry = tKnockSensorErr,        "Knock Sensor Error present",       int,  "activeInactive"
    entry = tBaroSensorErr,         "Baro Sensor Error present",        int,  "activeInactive"
    entry = tGearSensorErr,         "Gear Sensor Error present",        int,  "activeInactive"
    entry = tMapSensorErr,          "MAP Sensor Error present",         int,  "activeInactive"
    entry = tCiSensorErr,           "Cylinder Sensor Error present",    int,  "activeInactive"

    ;comm not needed

    entry = rpm,                    "RPM",                              int,    "%d"
    entry = RPMdot,                 "RPM DOT",                            float,  "%.3f"

    entry = MAP,                    "MAP kPa",                          float,  "%.3f"
    entry = MAPdot,                 "MAP DOT",                          float,  "%.3f"
    entry = BARO,                   "BARO kPa",                         float,  "%.3f"
    entry = TPS,                    "TPS deg",                          float,  "%.3f"
    entry = TPSdot,                 "TPS DOT",                          float,  "%.3f"
    entry = IAT,                    "IAT",                              float,  "%.3f"
    entry = CLT,                    "CLT",                              float,  "%.3f"
    entry = VBAT,                   "Battery V",                        float,  "%.3f"
    entry = AFR,                    "AFR",                              float,  "%.3f"
    entry = KNOCK,                  "Knock",                            float,  "%.3f"

    entry = GEAR,                   "gear",                             int,    "%d"
    entry = ground_speed,           "ground speed mm/s",                 int,    "%d"
    entry = EngineRunTime,          "Engine runtime",                   int,    "%d"

    ;ignition
    entry = ignValid,               "Ignition Controls valid",          int,  "activeInactive"
    entry = ignDynamic,             "Ignition Controls dynamic",        int,  "activeInactive"
    entry = ignSeqMode,             "Ignition Controls sequential",     int,  "activeInactive"
    entry = ignColdIdle,            "Ignition Controls cold idle",      int,  "activeInactive"
    entry = ignAdvMap,              "Ignition Controls advance MAP",    int,  "activeInactive"

    entry = advance,                "Advance deg",                      int,    "%d"
    entry = dwell,                  "Dwell ms",                         int,    "%d"

    ;fueling
    entry = fuelValid,              "Fueling Controls valid",           int,    "activeInactive"
    entry = fuelMAPnTPS,            "Fueling Controls by MAP or TPS",   int,    "activeInactive"
    entry = fuelAfrFallback,        "Fueling Controls AFR fallback",    int,    "activeInactive"
    entry = fuelInjBeginValid,      "Fueling Controls begin valid",     int,    "activeInactive"
    entry = fuelDryCrank,           "Fueling Controls Dry Cranking",    int,    "activeInactive"
    entry = fuelSeqMode,            "Fueling Controls sequential",      int,    "activeInactive"
    entry = fuelDcClip,             "Fueling Controls dc clipped",      int,    "activeInactive"

    entry = fuelWUE,                "WUE",             int,    "activeInactive"
    entry = fuelASE,                "ASE",             int,    "activeInactive"
    entry = fuelBAROcorr,           "BARO corr",       int,    "activeInactive"

    entry = fuelLegacyAE,           "AE active",       int,    "activeInactive"
    entry = fuelLegacyAEtrigMAPacc,    "AE trig MAP accel",       int,    "activeInactive"
    entry = fuelLegacyAEtrigMAPdec,    "AE trig MAP decel",       int,    "activeInactive"
    entry = fuelLegacyAEtrigTPSacc,    "AE trig TPS accel",       int,    "activeInactive"
    entry = fuelLegacyAEtrigTPSdec,    "AE trig TPS decel",       int,    "activeInactive"

    entry = fuelLoadTransientComp,  "Fueling Controls Transient Comp",  int,    "activeInactive"

    entry = VE,                     "VE %",                             float,  "%.3f"
    entry = AFRtgt,                 "AFR target",                       float,  "%.3f"
    entry = chargeTemp,             "charge temp K",                    float,  "%.3f"
    entry = airRate,                "air mass flow rate g/s",           float,  "%.3f"

    entry = BasefuelMass,           "base fuel mass ug",                float,  "%.3f"
    entry = TargetfuelMass,         "target fuel mass ug",              float,  "%.3f"
    entry = CmdfuelMass,            "commanded fuel mass ug",           float,  "%.3f"
    entry = WallfuelMass,           "wall fuel mass ug",                float,  "%.3f"

    entry = inj1Iv,                 "Inj1 Interval us",                 int,    "%d"
    entry = inj2Iv,                 "Inj2 Interval us",                 int,    "%d"
    entry = injDelay,               "Injector delay us",                int,    "%d"
    entry = injDcTgt,               "Injectors dc target %",            float,  "%.3f"

    entry = fuelRate,               "fuel flow rate ug/s",                float,  "%.3f"
    entry = fuelEff,                "fuel efficiency m/g",                 float,  "%.3f"

    ; on line channels
    entry = intake_vac,             "intake vac kPa",                   float,  "%.3f"
    entry = AFR_diff,               "AFR difference",                   float,  "%.3f"
    entry = FuelMassCorr_pct,       "fuel mass correction %",           float,  "%.3f"
    entry = FuelConsumpt_gph,       "fuel consumption g/h",             float,  "%.3f"
    entry = resAFR,                 "resulting AFR",                    float,  "%.3f"
    entry = resVE_pct,              "resulting VE %",                   float,  "%.3f"
    entry = reqKorr_pct,            "required fuel correction %",       float,  "%.3f"


[VeAnalyze]
;   tableName,  lambdaTargetTableName, lambdaChannel, egoCorrectionChannel, activeCondition
    veAnalyzeMap = VeTable_TPS, AfrTable_TPS, AFR, AFR_diff, false

    lambdaTargetTables = AfrTable_TPS

;   filter =  Name,        "DisplayName", outputChannel, operator, defaultVal, userAdjustable
        filter = minRPMFilter, "Minimum RPM", rpm,           <       , 500,      , true
       ; filter = maxRPMFilter, "Maximum RPM", rpm,           >       , 18000,    , true

       ;  filter = std_xAxisMin ; Auto build with appropriate axis channels
         filter = std_xAxisMax ; Auto build with appropriate axis channels
         filter = std_yAxisMin ; Auto build with appropriate axis channels
         filter = std_yAxisMax ; Auto build with appropriate axis channels
         filter = std_DeadLambda ; Auto build

         filter = minCltFilter, "Minimum CLT", coolant,       <       , 71,       , true
         filter = accelFilter, "AE Flag" , fuelAccelCompAct,         =       , 1,       , false
         filter = accelFilter, "WUE Flag" , fuelWarmUpCompAct,         =       , 1,       , false
         filter = accelFilter, "ASE Flag" , fuelAfterStartCompAct,         =       , 1,       , false
         filter = overrunFilter, "Overrun"    , injDcTgt,  =       , 0,        , false
         filter = std_Custom

;   tableName,  lambdaTargetTableName, lambdaChannel, egoCorrectionChannel, activeCondition
    veAnalyzeMap = VeTable_MAP, AfrTable_MAP, AFR, AFR_diff, false

    lambdaTargetTables = AfrTable_MAP

;   filter =  Name,        "DisplayName", outputChannel, operator, defaultVal, userAdjustable
        filter = minRPMFilter, "Minimum RPM", rpm,           <       , 500,      , true
       ; filter = maxRPMFilter, "Maximum RPM", rpm,           >       , 18000,    , true

       ;  filter = std_xAxisMin ; Auto build with appropriate axis channels
         filter = std_xAxisMax ; Auto build with appropriate axis channels
         filter = std_yAxisMin ; Auto build with appropriate axis channels
         filter = std_yAxisMax ; Auto build with appropriate axis channels
         filter = std_DeadLambda ; Auto build

         filter = minCltFilter, "Minimum CLT", coolant,       <       , 60,       , true
         filter = accelFilter, "AE Flag" , fuelAccelCompAct,         =       , 1,       , false
         filter = accelFilter, "WUE Flag" , fuelWarmUpCompAct,         =       , 1,       , false
         filter = accelFilter, "ASE Flag" , fuelAfterStartCompAct,         =       , 1,       , false
         filter = overrunFilter, "Overrun"    , injDcTgt,  =       , 0,        , false
         filter = std_Custom



[WueAnalyze]




[LoggerDefinition]
    ; valid logger types: composite, tooth, trigger, csv


;-------------------------------------------------------------------------------------
;   A note to the developer: data addressing: example with 2 16 bit variables m,n
;
;   The incoming Bytes in order B0..B3 are stored from right to left,
;   bit count is from left to right:
;
;   controller sends:
;
;   |B0| -> m_MSB
;   |B1| -> m_LSB
;   |B2| -> n_MSB
;   |B3| -> n_LSB
;
;
;   TS evaluates:
;
;   |B3|B2|B1|B0|
;
;   0.....16.....
;
;   record definition required:
;
;   recordField = Name,          HeaderName, startBit, bitCount, scale, units, updateCondition
;   recordField = deb_n,         "n",          0,          16,       1,  ""
;   recordField = deb_m,         "m",          16,         16,       1,  ""
;
;
;   => for STM32F410 perspective: send multi byte variables with FLIPPED byte order!
;-----------------------------------------------------------------------------------------

    loggerDef = SysLogger, "HighSpeedLog", csv

        dataReadCommand = "H" ; standard TS command format
        dataReadTimeout = 10000 ; time in ms until first read
        dataReadyCondition = { tHgspdLogUpdate }
        continuousRead= true

        ; length := 9 * 2(35 -1) +1
        dataLength = 621

       ;recordDef = headerLen. footerLen, recordLen
       recordDef =   0,   0,   9;


;       data_out[0]= pTarget->flags.all_flags;
;       data_out[1]= pTarget->crank_position;
;       data_out[2]= pTarget->event;
;       data_out[3]= pTarget->fraction_ts >> 8;
;       data_out[4]= pTarget->fraction_ts;

;       data_out[5]= pTarget->system_ts >> 24;
;       data_out[6]= pTarget->system_ts >> 16;
;       data_out[7]= pTarget->system_ts >> 8;
;       data_out[8]= pTarget->system_ts;

;       U8 coil1 :1;
;       U8 coil2 :1;
;       U8 injector1 :1;
;       U8 injector2 :1;
;       U8 cam_lobe :1;
;       U8 phase_valid :1;
;       U8 phase_comp :1;



        ;recordField = Name,                HeaderName,     startBit, bitCount, scale, units, updateCondition

        ;----- full timestamp variant ------------------------------------
        recordField = timestamp,             "Timestamp",        0,     32,     1, "ms"
        recordField = fraction_ts,           "fraction",        32,     16,      1, "us"

        recordField = event,                 "event",           48,     8,      1,  ""
        recordField = CrkPos,                "Crank Position",  56,     8,      1,  ""

        recordField = Coil1Powered,          "Coil1",            64,     1,       1,  ""
        recordField = Coil2Powered,          "Coil2",            65,     1,       1,  ""
        recordField = Injector1Powered,      "Inj1",             66,     1,       1,  ""
        recordField = Injector2Powered,      "Inj2",             67,     1,       1,  ""

        recordField = LobePresent,          "Cam lobe",          68,     1,       1,  ""
        recordField = PhaseValid,            "Phase valid",      69,     1,       1,  ""
        recordField = PhaseCompression,      "Phase Cyl1 Comp",  70,     1,       1,  ""




        calcField = time, "time", "us", {timestamp + fraction_ts / 1000.0}
       ;---------------------------------------------------------------------------










[Tools]
	;addTool = toolName, PanelName
	addTool = veTableGenerator, "VE Table Generator", VeTable_MAP
	addTool = afrTableGenerator, "AFR Table Generator", AfrTable_TPS

